

@{
    Layout = "";
}

@using KSS.Models
@model List<EmployeeModel>

<div class="centralResultPanel" style="margin-top: 30px">
    <ul class="personUL">
        @foreach (EmployeeModel employee in Model)
{
    <li class="listItem editListItem" data-id="@employee.Employee.Id" data-position="@employee.Employee.Code">
        <div class="lyncStatusDiv">
            
            <img src="~/Images/LyncStatuses/empty.png" data-email="@employee.Employee.EMail" onload="lyncImageLoaded(this);"
                 onclick="lyncImageClicked(this);"
                 onmouseout="lyncImageMouseOut();" />

        </div>
        <div class="personIMGLayout">
            <img class="personIMG" src="data:image;base64,@employee.GetImage()" />
        </div>
        <div class="innerPersonLayout" style="margin-right: 140px">
            <h5 class="personName">
                <a class="emploeeLink" data-url='@Url.Action("Index", "Employee", new {id = employee.Employee.Id})'>@employee.Employee.Name</a>
            </h5>
            <a class="personCardAddToFavoriteLinkInline personCardAddToFavoriteLink " data-url='@Url.Action("ChangeFavoriteStatusInline", "Employee", new { id = employee.Employee.Id })'>
                @if (employee.IsFavorite)
{
    <img src="~/Images/selectedStar.png" title="Удалить из избранного" />
}
else
{
                    <img src="~/Images/star.png" title="Добавить в избранное" />
                }
            </a>
            
            
            <p class="personDepartment" data-url="@Url.Action("SearchView", "Home", new { id = employee.DepartmentState.Id })"> @employee.DepartmentState.Department</p>
            <p class="personJob">@employee.PositionState.Title</p>
            <div class="phonesLine">
                @for (int i = 0, j=0; i < employee.EmployeePlaces.Count; i++)
                {
                    if (string.IsNullOrEmpty(employee.EmployeePlaces[i].PhoneNumber) || employee.EmployeePlaces[i].PhoneNumber == "_")
                    {
                        continue;
                    }

                    if (j == 0)
                    {
                        <p class="personCityPhone">@employee.EmployeePlaces[i].PhoneNumber;</p>
                        j++;
                    }
                    else
                    {
                        <p class="personMobilePhone">@employee.EmployeePlaces[i].PhoneNumber;</p>
                        j++;
                    }
                }
                @if (employee.EmployeePlaces.All(t=>string.IsNullOrEmpty(t.PhoneNumber) || t.PhoneNumber== "_"))
                {
                    <p class="personMail" style="margin-left:0">@employee.Employee.EMail</p>
                }
                else
                {
                    <p class="personMail">@employee.Employee.EMail</p>
                }
            </div>
        </div>

        <div class="editPositionPanel">
            <div>
                <a class="paginationNavigationLink moveToOneSideLink" 
                   data-url="@Url.Action("FavoritesWithReplace", "Home", new { startIndex = ViewBag.StartIndex, userGuid = employee.Employee.Id, delta = 0})">на самый верх</a>
                <p class="paginationArrow moveToOneSideLink">↑</p>
            </div>
            <div>
                <a class="paginationNavigationLink unhoveredLink" 
                   data-url="@Url.Action("FavoritesWithReplace", "Home", new { startIndex = ViewBag.StartIndex, userGuid = employee.Employee.Id, delta = 1})">ниже</a>
                <p class="paginationArrow unhoveredLink">↓</p>
                <a class="paginationNavigationLink unhoveredLink" 
                   data-url="@Url.Action("FavoritesWithReplace", "Home", new { startIndex = ViewBag.StartIndex, userGuid = employee.Employee.Id, delta = -1})">выше</a>
                <p class="paginationArrow unhoveredLink">↑</p>
            </div>
            <div>
                <a class="paginationNavigationLink moveToOneSideLink"
                   data-url="@Url.Action("FavoritesWithReplace", "Home", new { startIndex = ViewBag.StartIndex, userGuid = employee.Employee.Id, delta = int.MaxValue})">в самый низ</a>
                <p class="paginationArrow moveToOneSideLink">↓</p>
            </div>
        </div>

    </li>
}
    </ul>
</div>


@helper DrawPages(int startIndex, int count, bool after, bool before)
{
    if (before)
    {
        <a style="text-align: center; width: 30px; display: inline-block; margin-left: -33px">...</a>
    }

    for (int i = startIndex; i < count; i++)
    {
        if (i == ViewBag.StartIndex)
        {
            <a class='pageNmbr selectedPageNmbr' data-url='@Url.Action("Favorites", "Home", new {startIndex = i})'>
                @(i+1)
            </a>
        }
        else
        {
            <a class='pageNmbr' data-url='@Url.Action("Favorites", "Home", new {startIndex = i})'>
                @(i+1)
            </a>
        }
    }

    if (after)
    {
        <a style="text-align: center; width: 30px; display: inline-block">...</a>
    }
}

<div class="pagesContainer">
    @{
        if (ViewBag.StartIndex > 0)
        {
            <p class="paginationArrow">←</p>
            <a class="paginationNavigationLink" data-url='@Url.Action("Favorites", "Home", new {startIndex = ViewBag.StartIndex - 1})'>Назад</a>
        }
        else
        {
            <p class="paginationArrow" style="visibility: collapse">←</p>
            <a class="paginationNavigationLink" style="visibility: collapse">Назад</a>
        }

        if (ViewBag.StartIndex + 1 < ViewBag.PageCount)
        {
            <a class="paginationNavigationLink forwardLink" data-url='@Url.Action("Favorites", "Home", new {startIndex = ViewBag.StartIndex + 1})'>Вперед</a>
            <p class="paginationArrow">→</p>
        }
    }
</div>


<div id="pages" class="pagesContainer">
    @{
        const int maxPagesCount = 4;
        var length = ViewBag.PageCount;
        var startIndex = ViewBag.StartIndex;        

        if (length > maxPagesCount)
        {
            //отрисовываем вариант при куче страниц


            if (length - startIndex < maxPagesCount)
            {
                //отрисовываем остатки
                @DrawPages(length - maxPagesCount,length,false,true);
            }
            else
            {
                if (startIndex > 1)
                {
                    //отрисовываем средний случай (2 /3/ 4 5)
                    @DrawPages(startIndex -1, maxPagesCount + startIndex -1, true, true);
                }
                else
                {
                    //отрисовываем стартовый случай (1 /2/ 3 4 или /1/ 2 3 4)
                    @DrawPages(0, maxPagesCount, true, false);
                }
            }
        }
        else
        {
            //отрисовываем меньше 5 страниц
            @DrawPages(0, length, false, false);
        }
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $('.personCardAddToFavoriteLinkInline').on('click', function (e) {
            var currentPageItem = $(this);
            var url = currentPageItem.data('url');

            $.ajax({
                url: url,
                cache: false
            })
                .done(function (data) {
                    var img = currentPageItem.find('img');
                    if (data == 'True') {
                        img.attr('src', "/Images/selectedStar.png");
                    } else {
                        img.attr('src', "/Images/star.png");
                    }
                });
        });

        $('.pageNmbr, .paginationNavigationLink, .emploeeLink, .personDepartment').on('click', function (e) {
            var currentPageItem = $(e.target);
            var url = currentPageItem.data('url');
            $('.progress').show();

            if (currentPageItem.hasClass('emploeeLink') || currentPageItem.hasClass('personDepartment')) {
                ChangeSelectedPage(0);
            }

            loadSearchPage(url);
        });

        $('.favorite').on('click', function (e) {
                var currentListItem = $(e.target);
                var url = currentListItem.data('url');

                if (url != null) {
                    $.get(url);
                }
            }
        );
    });

</script>