@using WebGrease.Css.Extensions
@model KSS.Models.HomeViewModel

<script src="@Url.Content("~/Scripts/jquery.jstree.js")" type="text/javascript"></script>

@section Header
{
    @{
        var months = new Dictionary<int, string>
        {
            {1, "января"},
            {2, "февраля"},
            {3, "марта"},
            {4, "апреля"},
            {5, "мая"},
            {6, "июня"},
            {7, "июля"},
            {8, "августа"},
            {9, "сентября"},
            {10, "октября"},
            {11, "ноября"},
            {12, "декабря"},
        };
    }
    

    <nav class="mainMenuLayout">
        <img class="logo" src="~/Images/logo.png"/>
        
        <a class="userLabel" href='@Url.Action("Index", "Employee", new {id = "B682C266-37A5-42E5-A2C8-09845970534B"})'>Неавторизованный пользователь</a>

        <ul class="mainMenu">
            <li class="selectedPage">
                <div>
                    @Html.ActionLink("Главная", "Index", "Home")    
                </div>
            </li>
            <li>@Html.ActionLink("Избранное", "Favorites", "Home")</li>
            <li>@Html.ActionLink("Помощь", "Help", "Home")</li>
        </ul>
        
        @{
            var people = Model.GetBirthdayPeople();
            
            
            <div class="birthDayComboBox">                
                @if (people.Any(t => t.Employee.BirthDay.Value.Month == DateTime.Today.Month && t.Employee.BirthDay.Value.Day == DateTime.Today.Day))
                {
                    <div class="hasBirthdayTriangle"></div>    
                }
                <p>Дни рождения</p>
                <div class="plus"></div>
            </div>
            
        <div class="birthDayLayout">
            <div class="tabHeadersPanel">
                <h3 id="tabHeader1" class="tabHeader selectedTabHeader">Сегодня</h3>
                <h3 id="tabHeader2" class="tabHeader">Неделя</h3>
                <h3 id="tabHeader3" class="tabHeader">Месяц</h3>
            </div>
            <div class="tabItemContainer">
                <div id="tabItem1" class="tabItemContent selectedTabItemContent">
                    <ul class="birthDayPeopleList">
                        @foreach (var item in people.Where(t => t.Employee.BirthDay.Value.Day == DateTime.Today.Day && t.Employee.BirthDay.Value.Month == DateTime.Today.Month))
                        {
                            <li class="birthDayPeopleItem">
                                <h3 class="birthDayName">@item.Employee.Name</h3>
                                <p class="birthDayDate">@item.Employee.BirthDay.Value.Day @months[item.Employee.BirthDay.Value.Month]</p>
                                <p class="birthDayDepartment">@item.DepartmentState.Department</p>
                                <p class="birthDayJob">@item.PositionState.Title</p>
                            </li>
                        }
                    </ul>
                </div>
                <div id="tabItem2" class="tabItemContent">
                    <ul class="birthDayPeopleList">
                        @{
                            var now = DateTime.Today;

                            var items = people.Where(t =>
                            {
                                var first = new DateTime(t.Employee.BirthDay.Value.Year, now.Month, now.Day);
                                var last = first.AddDays(7);

                                if (t.Employee.BirthDay.Value >= first && t.Employee.BirthDay.Value <= last)
                                    return true;
                                return false;
                            });
                            
                            foreach (var item in items)
                            {
                                <li class="birthDayPeopleItem">
                                    <h3 class="birthDayName">@item.Employee.Name</h3>
                                    <p class="birthDayDate">@item.Employee.BirthDay.Value.Day @months[item.Employee.BirthDay.Value.Month]</p>
                                    <p class="birthDayDepartment">@item.DepartmentState.Department</p>
                                    <p class="birthDayJob">@item.PositionState.Title</p>
                                </li>
                            }
                        }
                    </ul>
                </div>
                <div id="tabItem3" class="tabItemContent">
                    <ul class="birthDayPeopleList">
                        @foreach (var item in people)
                        {
                            <li class="birthDayPeopleItem">
                                <h3 class="birthDayName">@item.Employee.Name</h3>
                                <p class="birthDayDate">@item.Employee.BirthDay.Value.Day @months[item.Employee.BirthDay.Value.Month]</p>
                                <p class="birthDayDepartment">@item.DepartmentState.Department</p>
                                <p class="birthDayJob">@item.PositionState.Title</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        }

    </nav>
}


<div id="divTree">
    @Html.Partial("Tree", Model.TreeViewModel)
</div>

<div id="centralPart">
    
</div>


<script type="text/javascript">
    var _lastId = '-1';
    var _lastObject = null;

    $(document).ready(function () {


        $('.tabHeader').on('click', function(e) {
            var clickedItem = $(e.target);
            if (!clickedItem.hasClass('selectedTabHeader')) {

                //hide old selected tabHeader
                $('.selectedTabHeader').toggleClass('selectedTabHeader');
                //hide old selected tabItem                
                $('.tabItemContent').removeClass('selectedTabItemContent');

                //show current selected tabHeader
                clickedItem.toggleClass('selectedTabHeader');

                var id = clickedItem.attr('id');
                id = id.substr(id.length - 1);
                var tabItem = '#tabItem' + id;
                
                $(tabItem).toggleClass('selectedTabItemContent');
            }
        });

        $('.birthDayComboBox').on('click', function (e) {
            var comboBox = $('.birthDayComboBox');
            comboBox.toggleClass('activeBirthDayComboBox');
            comboBox.find('.plus').toggleClass('activePlus');

            $('.birthDayLayout').toggle();
        });

        $('#divTree').on('click', function (e) {
            var target = $(e.target);
            var isSpan = $(e.target).is('span');

            if (isSpan) {
                //reload central part
                var ids = target.attr('id');

                if (_lastId != ids) {
                    
                    if (_lastObject != null) {
                        _lastObject.toggleClass('selectedTreeNode');
                    }


                    var url = '@Url.Action("SearchView", new {id="-1"})';
                    url = url.replace('-1', ids);

                    loadSearchPage(url);

                    _lastId = ids;
                    _lastObject = target.parent();
                    _lastObject.toggleClass('selectedTreeNode');
                }
            }
        });
    });

    function loadSearchPage(url) {
        $.get(url, function (data) {
            var parent = $('#centralPart');
            if (parent != null) {
                    parent.empty();
                parent.append(data);
            }
        });
    }
</script>
