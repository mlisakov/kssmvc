<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<link href="~/Content/jquery-ui/jquery-ui.min.css" rel="stylesheet" />

@using KSS.Helpers
@using KSS.Models
@using KSS.Server.Entities
@model SpecificChangableModel
@{
    Layout = "";
}


<div class="searchLayout">
    @if (ViewBag.IsAdmin)
    {
        <div id="searchResult" class="centralResultPanel">
            <p id="addTreeItem" class="personCardEdit " style="margin-top: 40px; display: block; width: 160px">создать новую группу…</p>
            <p id="editTreeItem" class="personCardEdit " style="margin-top: 20px; display: block; width: 160px">редактировать группу…</p>
            <p id="removeTreeItem" class="personCardEdit " style="margin-top: 20px; display: block; width: 160px">удалить группу…</p>
            
            <div style="height: 1px; background: darkgray"></div>
            
            <div>
                <p id="addSpecificStaff" class="personCardEdit " style="margin-top: 20px; display: block; width: 160px">создать новую позицию…</p>
            </div>
        </div>
        
        <div class="createTreeItemDialog personCardDialog">
            <p class="personCardChangePlaceDialogSimpleLabel">филиал</p>
            <select id="existedDivisionComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>                
                @foreach (var reg in Model.GetLastDivisionStates())
                {
                    <option value="@reg.Id">@reg.Division</option>
                }
            </select>

            <p class="personCardChangePlaceDialogSimpleLabel">родительская группа</p>
            <select id="existedTreeItemsComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>
            
            <p class="personCardChangePlaceDialogSimpleLabel">наименование</p>
            <input id="newTreeItemTextBox" type="text" class="personCardStreet personCardChangePlaceDialogText" tabindex="4" />

            
            <div class="personCardChangePlaceDialogButtonsContainer">
                <p id="cancelCreateTreeItem" class="personCardEdit personCardCancelEditPlaceButton">отменить</p>
                <input id="createTreeItem" type="button" class="departmentSearchButton personCardSavePlaceDialogButton" value="сохранить" tabindex="7" />
            </div>

        </div>
        
        <div class="updateTreeItemDialog personCardDialog">
            <p class="personCardChangePlaceDialogSimpleLabel">филиал</p>
            <select id="updatingDivisionComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>                
                @foreach (var reg in Model.GetLastDivisionStates())
                {
                    <option value="@reg.Id">@reg.Division</option>
                }
            </select>

            <p class="personCardChangePlaceDialogSimpleLabel">группа</p>
            <select id="updatingTreeItemsComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>
            
            <p class="personCardChangePlaceDialogSimpleLabel">наименование</p>
            <input id="updateTreeItemTextBox" type="text" class="personCardStreet personCardChangePlaceDialogText" tabindex="4" />

            
            <div class="personCardChangePlaceDialogButtonsContainer">
                <p id="cancelUpdateTreeItem" class="personCardEdit personCardCancelEditPlaceButton">отменить</p>
                <input id="updateTreeItem" type="button" class="departmentSearchButton personCardSavePlaceDialogButton" value="сохранить" tabindex="7" />
            </div>

        </div>
        
        <div class="removeTreeItemDialog personCardDialog">
            <p class="personCardChangePlaceDialogSimpleLabel">филиал</p>
            <select id="removeDivisionComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>                
                @foreach (var reg in Model.GetLastDivisionStates())
                {
                    <option value="@reg.Id">@reg.Division</option>
                }
            </select>

            <p class="personCardChangePlaceDialogSimpleLabel">группа</p>
            <select id="removeTreeItemsComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>
            
            <div class="personCardChangePlaceDialogButtonsContainer">
                <p id="cancelRemoveTreeItem" class="personCardEdit personCardCancelEditPlaceButton">отменить</p>
                <input id="deleteTreeItem" type="button" class="departmentSearchButton personCardSavePlaceDialogButton" value="удалить" tabindex="7" />
            </div>

        </div>
        
        <div class="createSpecificStaffDialog personCardDialog">
            <p class="personCardChangePlaceDialogSimpleLabel">филиал</p>
            <select id="createSpecificStaffDivisionComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>                
                @foreach (var reg in Model.GetLastDivisionStates())
                {
                    <option value="@reg.Id">@reg.Division</option>
                }
            </select>

            <p class="personCardChangePlaceDialogSimpleLabel">подразделение</p>
            <select id="createSpecificStaffDepartmentComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>
            

            <p class="personCardChangePlaceDialogSimpleLabel">группа</p>
            <select id="createSpecificStaffTreeItemComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>
            
            <p class="personCardChangePlaceDialogSimpleLabel">контактное лицо</p>
            <select id="createSpecificStaffEmployeeComboBox" class="personCardRegionComboBox personCardChangePlaceDialogSelect" tabindex="2">
                <option value="" selected>не выбран</option>
            </select>

            <p class="personCardChangePlaceDialogSimpleLabel">наименование позиции</p>
            <input id="newSpecificStaffTextBox" type="text" maxlength="200" class="personCardStreet personCardChangePlaceDialogText" tabindex="4" />
            
            <p class="personCardChangePlaceDialogSimpleLabel">рейтинг</p>
            <input id="newSpecificStaffRankingTextBox" type="text" maxlength="20" class="personCardStreet personCardChangePlaceDialogText" tabindex="4" />
            

            <div class="personCardChangePlaceDialogButtonsContainer">
                <p id="cancelRemoveTreeItem" class="personCardEdit personCardCancelEditPlaceButton">отменить</p>
                <input id="createSpecificStaff" type="button" class="departmentSearchButton personCardSavePlaceDialogButton" value="сохранить" tabindex="7" />
            </div>
        </div>
    }
    
</div>


<script type="text/javascript">

    $(document).ready(function() {

        //скрытие всех диалогов
        function hideAllDialogs() {
            $(".personCardDialog").hide();
        }

        $('#cancelCreateTreeItem, #cancelUpdateTreeItem, #cancelRemoveTreeItem').on('click', function () {
            hideAllDialogs();
        });





        //------Создание пункта дерева-----
        $('#addTreeItem').on('click', function(e) {
            hideAllDialogs();

            var dialog = $(".createTreeItemDialog").first();

            var oldPosition = $(this).position();
            dialog.css({
                top: (oldPosition.top)
            });

            dialog.show();
        });

        //division changed
        $('#existedDivisionComboBox').change(function() {

            //очищаем зависимые комбобоксы
            $('#existedTreeItemsComboBox option').remove();
            
            if ($('#existedDivisionComboBox option:selected').val() != '') {
                var url = '@Url.Action("GetDepartmentSpecificStaff", "Home")';
                var data = { division: $('#existedDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#existedTreeItemsComboBox'));
            } else {
                $('#existedDivisionComboBox').append('<option value="" selected>не выбран</option>');
            }
        });

        //грузим DepartmentSpecificState     
        function loadComboBoxItems(url, data, control) {
            $.ajax({
                    url: url,
                    data: data,
                    cache: false,
                })
                .done(function (result) {
                    if (control != null) {
                        control.append(result);
                    }                   
                });
        }

        $('#createTreeItem').on('click', function() {
            var existedDivision = $('#existedDivisionComboBox option:selected').val();

            var existedGroup = $('#existedTreeItemsComboBox option:selected').val();

            var newItemName = $('#newTreeItemTextBox').val();
            newItemName = newItemName.trim();

            if (existedDivision == "") {
                alert('Необходимо выбрать филиал');
                return;
            } else {
                if (newItemName == "") {
                    alert('Необходимо указать наименование новой группы');
                    return;
                }
            }

            var url = '@Url.Action("CreateNewDepartmentSpecificStaff", "Home")';
            var data = {
                division: existedDivision,
                parent: existedGroup,
                name: newItemName,
            };

            var parent = $('#centralPart');
            var progressBar = $('<div class="centralPartWithProgressBar"/>');
            if (parent != null) {
                parent.append(progressBar);
            }
            $.get(url, data, function () {

                if (parent != null) {
                    progressBar.remove();
                }
                hideAllDialogs();


                var treeUrl = '@Url.Action("SpecificTree","Tree")';
                $('#divTree').find('.specificInnerUL:first').remove();
                loadTree(treeUrl);

                $('#newTreeItemTextBox').val('');
            });
        });





        //------редактирование пункта дерева-----
        $('#editTreeItem').on('click', function (e) {
            hideAllDialogs();

            var dialog = $(".updateTreeItemDialog").first();

            var oldPosition = $(this).position();
            dialog.css({
                top: (oldPosition.top)
            });

            dialog.show();
        });

        //updating division changed
        $('#updatingDivisionComboBox').change(function() {

            //очищаем зависимые комбобоксы
            $('#updatingTreeItemsComboBox option').remove();

            if ($('#updatingDivisionComboBox option:selected').val() != '') {

                var url = '@Url.Action("GetDepartmentSpecificStaff", "Home")';
                var data = { division: $('#updatingDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#updatingTreeItemsComboBox'));
            } else {
                $('#updatingDivisionComboBox').append('<option value="" selected>не выбран</option>');
            }
        });

        $('#updateTreeItem').on('click', function() {
            var existedDivision = $('#updatingDivisionComboBox option:selected').val();

            var existedGroup = $('#updatingTreeItemsComboBox option:selected').val();

            var newItemName = $('#updateTreeItemTextBox').val();
            newItemName = newItemName.trim();

            if (existedDivision == "") {
                alert('Необходимо выбрать филиал');
                return;
            } else {

                if (existedGroup == "") {
                    alert('Необходимо выбрать группу');
                    return;
                } else {
                    if (newItemName == "") {
                        alert('Новое наименование не может быть пустым');
                        return;
                    }
                }
            }

            var url = '@Url.Action("UpdateDepartmentSpecificStaff", "Home")';
            var data = {
                item: existedGroup,                
                name: newItemName,
            };

            var parent = $('#centralPart');
            var progressBar = $('<div class="centralPartWithProgressBar"/>');
            if (parent != null) {
                parent.append(progressBar);
            }
            $.get(url, data, function () {

                if (parent != null) {
                    progressBar.remove();
                }
                hideAllDialogs();


                var treeUrl = '@Url.Action("SpecificTree","Tree")';
                $('#divTree').find('.specificInnerUL:first').remove();
                loadTree(treeUrl);

                $('#updateTreeItemTextBox').val('');
            });
        });






        //------удаление пункта дерева-----
        $('#removeTreeItem').on('click', function (e) {
            hideAllDialogs();

            var dialog = $(".removeTreeItemDialog").first();

            var oldPosition = $(this).position();
            dialog.css({
                top: (oldPosition.top)
            });

            dialog.show();
        });

        //remove division changed
        $('#removeDivisionComboBox').change(function () {

            //очищаем зависимые комбобоксы
            $('#removeTreeItemsComboBox option').remove();

            if ($('#removeDivisionComboBox option:selected').val() != '') {                
                var url = '@Url.Action("GetDepartmentSpecificStaff", "Home")';
                var data = { division: $('#removeDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#removeTreeItemsComboBox'));
            } else {
                $('#removeDivisionComboBox').append('<option value="" selected>не выбран</option>');
            }
        });

        $('#deleteTreeItem').on('click', function () {
            var existedDivision = $('#removeDivisionComboBox option:selected').val();

            var existedGroup = $('#removeTreeItemsComboBox option:selected').val();

            if (existedDivision == "") {
                alert('Необходимо выбрать филиал');
                return;
            } else {

                if (existedGroup == "") {
                    alert('Необходимо выбрать группу');
                    return;
                }
            }

            var url = '@Url.Action("RemoveDepartmentSpecificStaff", "Home")';
            var data = {
                item: existedGroup
            };

            var parent = $('#centralPart');
            var progressBar = $('<div class="centralPartWithProgressBar"/>');
            if (parent != null) {
                parent.append(progressBar);
            }
            $.get(url, data, function () {

                if (parent != null) {
                    progressBar.remove();
                }
                hideAllDialogs();


                var treeUrl = '@Url.Action("SpecificTree","Tree")';
                $('#divTree').find('.specificInnerUL:first').remove();
                loadTree(treeUrl);
            });
        });





        //------создание SpecificStaff-----
        
        //открытие диалога добавления специфика
        $('#addSpecificStaff').on('click', function (e) {
            hideAllDialogs();

            var dialog = $(".createSpecificStaffDialog").first();

            var oldPosition = $(this).position();
            dialog.css({
                top: (oldPosition.top)
            });

            dialog.show();
        });

        //изменился диапозон
        $('#createSpecificStaffDivisionComboBox').change(function () {

            //очищаем зависимые комбобоксы
            $('#createSpecificStaffDepartmentComboBox option').remove();
            $('#createSpecificStaffTreeItemComboBox option').remove();
            $('#createSpecificStaffEmployeeComboBox option').remove();

            if ($('#createSpecificStaffDivisionComboBox option:selected').val() != '') {
                //грузим департаменты
                var url = '@Url.Action("GetDepartmentsToComboBox", "Home")';
                var data = { division: $('#createSpecificStaffDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#createSpecificStaffDepartmentComboBox'));

                //грузим DepartmentSpecificStaff
                url = '@Url.Action("GetDepartmentSpecificStaff", "Home")';
                data = { division: $('#createSpecificStaffDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#createSpecificStaffTreeItemComboBox'));

                //грузим юзеров
                url = '@Url.Action("GetEmployeeToComboBox", "Home")';
                data = { division: $('#createSpecificStaffDivisionComboBox option:selected').val() };

                loadComboBoxItems(url, data, $('#createSpecificStaffEmployeeComboBox'));

            } else {
                $('#createSpecificStaffDepartmentComboBox').append('<option value="" selected>не выбран</option>');
                $('#createSpecificStaffTreeItemComboBox').append('<option value="" selected>не выбран</option>');
                $('#createSpecificStaffEmployeeComboBox').append('<option value="" selected>не выбран</option>');
            }
        });

        //создаем спефицика
        $('#createSpecificStaff').on('click', function () {
            var existedDivision = $('#createSpecificStaffDivisionComboBox option:selected').val();
            var existedDepartment = $('#createSpecificStaffDepartmentComboBox option:selected').val();
            var existedPerson = $('#createSpecificStaffEmployeeComboBox option:selected').val();
            var existedGroup = $('#createSpecificStaffTreeItemComboBox option:selected').val();
            var positionName = $('#newSpecificStaffTextBox').val();
            positionName = positionName.trim();

            var rankingValue = $('#newSpecificStaffRankingTextBox').val();
            rankingValue = rankingValue.trim();


            if (existedDivision == "") {
                alert('Необходимо выбрать филиал');
                return;
            } else {
                if (existedDepartment == "") {
                    alert('Необходимо выбрать департамент');
                    return;
                } else {

                    if (existedGroup == "") {
                        alert('Необходимо выбрать группу');
                        return;
                    } else {
                        if (positionName == "") {
                            alert('Необходимо указать наименование позиции');
                            return;
                        } else {
                            if (rankingValue == "") {
                                alert('Необходимо указать значение рейтинга');
                                return;
                            }
                        }
                    }
                }
            }

            var url = '@Url.Action("CreateNewSpecificStaff", "Home")';
            var data = {
                department: existedDepartment,
                employee: existedPerson,
                departmentSpecificStaff: existedGroup,
                position: positionName,
                ranking: rankingValue
            };

            var parent = $('#centralPart');
            var progressBar = $('<div class="centralPartWithProgressBar"/>');
            if (parent != null) {
                parent.append(progressBar);
            }
            $.get(url, data, function () {

                if (parent != null) {
                    progressBar.remove();
                }
                hideAllDialogs();

                $('#newSpecificStaffTextBox').val('');
                $('#newSpecificStaffRankingTextBox').val('');
            });
        });
    });
</script>