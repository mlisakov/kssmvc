
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
@{
    Layout = "";
}

@using KSS.Models
@model TreeViewModel

@helper TreeView(TreeViewNode node)
{

@*    <div class="folder-parent">*@
    <li data-url='@Url.Action("TreeNodes", "Tree", new {id = node.Id, type = node.Type})'>
        <div class="plus rootArrow"></div>
        <span class="rootItem folder hasChilds @node.Type" id="@node.Id">
        @node.Name
    </span>
    </li>
    
    //    </div>

    if (node.HasChilds && node.Children != null)
    {
        foreach (TreeViewNode childNode in node.Children)
        {

            if (node.IsLeaf)
            {
                <li data-url='@Url.Action("TreeNodes", "Tree", new{id =node.Id,type = node.Type})'>
                    <span class="leaf hasChilds @node.Type" id="@node.Id">@node.Name</span>
                </li>
            }
            else
            {
                <li>            
                    <span class="folder" id="@node.Id">@node.Name</span>
                    <ul class="innerUL">
                        @TreeView(childNode)
                    </ul>
            </li>
        }
    }
}
}


<ul class="innerUL rootUL">
         @foreach (TreeViewNode rootNode in Model.RootNodes)
         {
             @TreeView(rootNode)
         }
</ul>



<script type="text/javascript">
    $(document).ready(function () {
        
        $('.innerUL').on('click', function(e) {
            var currentListItem = $(e.target);
            var url = currentListItem.data('url');

            if (url != null) {

                if (!currentListItem.next().hasClass('innerUL')) {

                    //hide background parent UL
                    var list = currentListItem.parent();
                    if (!list.hasClass('rootUL'))
                        list.toggleClass('innerUL-background');
                    
                    //show minus, hide plus
                    var minus = currentListItem.children('.plus');
                    minus.toggleClass("minus");
                    minus.toggleClass("plus");

                    //load items
                    loadDivisionStates(currentListItem, url);



                    e.stopPropagation();
                } else {
                    
                    //add background to parent UL
                    var list = currentListItem.parent();
                    if (!list.hasClass('rootUL'))
                        list.toggleClass('innerUL-background');

                    //hide items
                    currentListItem.next().slideToggle('slow');


                    //show plus, hide minus
                    var minus = currentListItem.children('.minus');
                    minus.toggleClass("minus");
                    minus.toggleClass("plus");
                }
            }
        });
                
//
//        $('.innerUL').on('click', function (e) {
//            var currentListItem = $(e.target);
//            var url = currentListItem.data('url');
//
//            if (url != null) {
//
//                if (currentListItem.closest('.folder-parent').parent().has('.divBody').length == 0) {
//
//                } else {
//                    var body = currentListItem.closest('.folder-parent').parent().children('.divBody').first();
//                    
//                    body.children('.innerUL').slideToggle('slow');
//
//                    e.stopPropagation();
//                    console.log("hide");
//                }
//            }
//
//        });

        function loadDivisionStates(listItem, url) {
            $.get(url, function (data) {
                //                listItem.parent().after(data);
                
                listItem.after(data);
                listItem.next().addClass('innerUL-background');
            });
        }
    });
</script>