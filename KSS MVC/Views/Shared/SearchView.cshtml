<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<link href="~/Content/jquery-ui/jquery-ui.min.css" rel="stylesheet" />

@using KSS.Models
@using KSS.Server.Entities
@model SearchViewModel
@{
    Layout = "";
}

@helper DrawPages(int startIndex, int count, bool after, bool before)
{
    if (before)
    {
        <a style="text-align: center; width: 30px; display: inline-block; margin-left: -33px">...</a>
    }

    for (int i = startIndex; i < count; i++)
    {
        if (i == ViewBag.StartIndex)
        {
            if (ViewBag.IsAdvanced)
            {
                <a class='pageNmbr selectedPageNmbr linkInSearchPage' data-url='@Url.Action("SearchEmployeesAdvanced", "Home", new
                                                                   {
                                                                       divisionId = Model.DivisionID,
                                                                       placeId = ViewBag.SearchPlace,
//                                                                       isMemberOfHeadquarter = null,
                                                                       phoneNumber = ViewBag.SearchPhoneNumber,
                                                                       departmentId = Model.DepartmentID,
                                                                       dateStart = ViewBag.SearchDateStart,
                                                                       dateEnd = ViewBag.SearchDateEnd,
                                                                       job = ViewBag.SearchJob,
                                                                       employeeName = ViewBag.Search,
                                                                       startIndex = i
                                                                   })'>
                    @(i + 1)
                </a>
            }
        }
        else
        {
            if (ViewBag.IsAdvanced)
            {
                <a class='pageNmbr linkInSearchPage' data-url='@Url.Action("SearchEmployeesAdvanced", "Home", new
                                                  {
                                                      divisionId = Model.DivisionID,
                                                      placeId = ViewBag.SearchPlace,
//                                                      isMemberOfHeadquarter = null,
                                                      phoneNumber = ViewBag.SearchPhoneNumber,
                                                      departmentId = Model.DepartmentID,
                                                      dateStart = ViewBag.SearchDateStart,
                                                      dateEnd = ViewBag.SearchDateEnd,
                                                      job = ViewBag.SearchJob,
                                                      employeeName = ViewBag.Search,
                                                      startIndex = i
                                                  })'>
                    @(i + 1)
                </a>
            }
        }
    }

    if (after)
    {
        <a style="text-align: center; width: 30px; display: inline-block">...</a>
    }
}

<div class="searchLayout">
    <h3 class="departmentHeader">@Model.DepartmentName
        <img class="searchProgress" src="~/Images/progress.gif" />
    </h3>
    
    <div class="shortSearch">
        <input id="searchText" type="text" class="departmentSearchText" placeholder="поиск по ФИО" maxlength="100"/>
        <input id="searchBtn" type="button" class="departmentSearchButton" value="найти"  />        
    </div>
    <div class="additionalSearchPanel">
        <div class=" additionalSearchRowFirst additionalSearchRow ">
            <p class="fieldLabel">филиал</p>

            <p class="fieldLabel  rightItem">местоположение</p>            
            <select class="field " id="Divisions">
                 
                <option class="comboBoxItem" value="-1">выберите филиал</option>
                @foreach (DivisionState divState in Model.GetDivisionStates())
                {
                    <option class="comboBoxItem" value='@divState.Id'>@divState.Division</option>
                }
            </select>

            <select id="Places" class="field rightItem">
                <option class="comboBoxItem" value="-1">выберите местоположение</option>
                @foreach (KeyValuePair<Guid,String> locality in Model.GetCustomLocality())
                {
                    <option class="comboBoxItem" value='@locality.Key'>@locality.Value</option>
                }
            </select>
        </div>

        <div class="additionalSearchRow">
            <p class="fieldLabel">член штаба</p>
            
            <p class="fieldLabel rightItem">номер телефона</p>

            <select id="IsMemberOfHeadQuarterComboBox" class="field">
                <option class="comboBoxItem" value="true">Да</option>
                <option class="comboBoxItem" selected value="false">Нет</option>
            </select>

            <input id="PhoneNumberAdditionalSearch" type="text" class="field rightItem"/>            
        </div>

        <div class="additionalSearchRow">
            <p class="fieldLabel">подразделение</p>
            
            
            <p class="fieldLabel rightItem">дни рождения</p>

            <select class="field" id="Departments" disabled>
                <option class="comboBoxItem" value='@Guid.Empty'>выберите подразделение</option>
            </select>
            
            <div class="rightItem">                
                <input id="StartDatePicker" readonly="readonly" type="text" class="dataPicker" />
                <p class="dataPickerSeparator">&ndash;</p>
                <input id="EndDatePicker" readonly="readonly" type="text" class="dataPicker" />                   
            </div>

        </div>
        <div class="additionalSearchRow">
            <p class="fieldLabel noFloatItem">должность</p>
            <select class="field " id="Positions" disabled>
                <option class="comboBoxItem" value='-1'>выберите должность</option>
            </select>
        </div>
    </div>
        
    <a class="advancedSearch">Расширенный поиск <span>↓</span></a>
    @*    <a class="exportLink" data-url='@Url.Action("Export","Home")'>Экспорт</a>*@
    
    <div class="toolBoxDiv">
        @using (Html.BeginForm("Export", "Home", FormMethod.Get))
        {
            <input type="submit" value="экспорт" class="exportExcelLink" />
        }
        @using (Html.BeginForm("Print", "Home", FormMethod.Get))
        {
            <input type="submit" value="печать" class="printLink" />
        }
    </div>
    
    <div id="searchResult" class="centralResultPanel">
        <ul class="personUL">

            @foreach (EmployeeModel employee in Model.GetEmployers())
            {
                <li>
                    <div class="lyncStatusDiv">
@*                        <img src="~/Images/LyncStatuses/empty.png" data-email="@employee.Employee.EMail" onload="lyncImageLoaded(this);"*@
@*                             onclick="lyncImageClicked(this);"*@
@*                             onmouseout="lyncImageMouseOut();" />*@
                        <div class="author" data-user-id="@employee.Employee.EMail"> </div>    
                    </div>
                    


                    <div class="personIMGLayout">
                        <img class="personIMG" src="data:image;base64,@employee.GetImage()" />
                    </div>
                    <div class="innerPersonLayout">
                        <h5 class="personName">                            
                            <a class="emploeeLink" data-url='@Url.Action("Index", "Employee", new {id = employee.Employee.Id})'>@employee.Employee.Name</a>
    
                        </h5>
                        <a class="personCardAddToFavoriteLinkInline personCardAddToFavoriteLink " data-url='@Url.Action("ChangeFavoriteStatusInline", "Employee", new { id = employee.Employee.Id })'>
                            @if (employee.IsFavorite)
                            {
                                <img src="~/Images/selectedStar.png" title="Удалить из избранного" />
                            }
                            else
                            {
                                <img src="~/Images/star.png" title="Добавить в избранное" />
                            }
                        </a>

                        @*                        <p class="personDepartment"> @employee.DepartmentState.Department</p>*@
                        <p class="personDepartment" data-url="@Url.Action("SearchView", "Home", new { id = employee.DepartmentState.Id })"> @employee.DepartmentState.Department</p>
                        <p class="personJob">@employee.PositionState.Title</p>
                        <div class="phonesLine">
                            @for (int i = 0, j = 0; i < employee.EmployeePlaces.Count; i++)
                            {
                                if (string.IsNullOrEmpty(employee.EmployeePlaces[i].PhoneNumber) || employee.EmployeePlaces[i].PhoneNumber == "_")
                                {
                                    continue;
                                }

                                if (j == 0)
                                {
                                    <p class="personCityPhone">@employee.EmployeePlaces[i].PhoneNumber;</p>
                                    j++;
                                }
                                else
                                {
                                    <p class="personMobilePhone">@employee.EmployeePlaces[i].PhoneNumber;</p>
                                    j++;
                                }
                            }
                            @if (employee.EmployeePlaces.All(t => string.IsNullOrEmpty(t.PhoneNumber) || t.PhoneNumber == "_"))
                            {
                                <p class="personMail" style="margin-left:0">@employee.Employee.EMail</p>
                            }
                            else
                            {
                                <p class="personMail">@employee.Employee.EMail</p>
                            }
                            
                        </div>
                    </div>
                </li>
            }
        </ul>
        
        <div class="pagesContainer">
            @{
                if (ViewBag.StartIndex > 0)
                {
                    <p class="paginationArrow">←</p>
                    if (ViewBag.IsAdvanced)
                    {
                        <a class='paginationNavigationLink linkInSearchPage' data-url='@Url.Action("SearchEmployeesAdvanced", "Home", new
                                                                                       {
                                                                                           divisionId = Model.DivisionID,
                                                                                           placeId = ViewBag.SearchPlace,
                                                                                           isMemberOfHeadquarter = ViewBag.SearchIsMember,
                                                                                           phoneNumber = ViewBag.SearchPhoneNumber,
                                                                                           departmentId = Model.DepartmentID,
                                                                                           dateStart = ViewBag.SearchDateStart,
                                                                                           dateEnd = ViewBag.SearchDateEnd,
                                                                                           job = ViewBag.SearchJob,
                                                                                           employeeName = ViewBag.Search,
                                                                                           startIndex = ViewBag.StartIndex - 1
                                                                                       })'>
                            Назад
                        </a>
                    }
                }
                else
                {
                    <p class="paginationArrow" style="visibility: collapse">←</p>
                    <a class="paginationNavigationLink linkInSearchPage" style="visibility: collapse">Назад</a>
                }

                if (ViewBag.StartIndex + 1 < Model.PageCount)
                {
                    if (ViewBag.IsAdvanced)
                    {
                        <a class='paginationNavigationLink forwardLink linkInSearchPage' data-url='@Url.Action("SearchEmployeesAdvanced", "Home", new
                                                                                                   {
                                                                                                       divisionId = Model.DivisionID,
                                                                                                       placeId = "",
                                                                                                       isMemberOfHeadquarter = ViewBag.SearchIsMember,
                                                                                                       phoneNumber = ViewBag.SearchPhoneNumber,
                                                                                                       departmentId = Model.DepartmentID,
                                                                                                       dateStart = ViewBag.SearchDateStart,
                                                                                                       dateEnd = ViewBag.SearchDateEnd,
                                                                                                       job = ViewBag.SearchJob,
                                                                                                       employeeName = ViewBag.Search,
                                                                                                       startIndex = ViewBag.StartIndex + 1
                                                                                                   })'>
                            Вперед
                        </a>
                    }
                    <p class="paginationArrow">→</p>
                }
            }
        </div>

        <div id="pages" class="pagesContainer">
            @{
                const int maxPagesCount = 4;
                var length = Model.PageCount;
                var startIndex = ViewBag.StartIndex;

                if (length > maxPagesCount)
                {
                    //отрисовываем вариант при куче страниц


                    if (length - startIndex < maxPagesCount)
                    {
                        //отрисовываем остатки
                        @DrawPages(length - maxPagesCount, length, false, true);
                    }
                    else
                    {
                        if (startIndex > 1)
                        {
                            //отрисовываем средний случай (2 /3/ 4 5)
                            @DrawPages(startIndex - 1, maxPagesCount + startIndex - 1, true, true);
                        }
                        else
                        {
                            //отрисовываем стартовый случай (1 /2/ 3 4 или /1/ 2 3 4)
                            @DrawPages(0, maxPagesCount, true, false);
                        }
                    }
                }
                else
                {
                    //отрисовываем меньше 5 страниц
                    @DrawPages(0, length, false, false);
                }
            }
        </div>
    </div>
    
    

    

</div>







<script type="text/javascript">

    $(document).ready(function () {

        $('.personCardAddToFavoriteLinkInline').on('click', function (e) {
            var currentPageItem = $(this);
            var url = currentPageItem.data('url');

            $.ajax({
                    url: url,
                    cache: false
                })
                .done(function(data) {                    
                    var img = currentPageItem.find('img');
                    if (data == 'True') {
                        img.attr('src', "/Images/selectedStar.png");
                    } else {
                        img.attr('src', "/Images/star.png");
                    }
                });
        });


        $('.linkInSearchPage').on('click', function (e) {

            var currentPageItem = $(e.target);
            var url = currentPageItem.data('url');
            $('.progress').show();

            loadSearchPageResult(url);
        });

        $('.emploeeLink, .personDepartment').on('click', function (e) {

            var currentPageItem = $(e.target);
            var url = currentPageItem.data('url');
            $('.progress').show();

            ChangeSelectedPage(0);

            ClearTreeSelection();
            loadSearchPage(url);
        });

        $('#searchText').keydown(function(e) {
            if (e.which == 13) {
                $('#searchBtn').click();
            }
        });

        $('#searchBtn').on('click', function(e) {
            var value = $('#searchText').val();
            var url = '@Url.Action("SearchEmployees", "Home")';

            var dataParam = { employeeName:value, startIndex: 0 };

            if ($('.advancedSearch').hasClass('advancedSearchOpened')) {

                var divisionId = $('#Divisions option:selected').val();
                var placeId = $('#Places option:selected').val();
                var isMember = $('#IsMemberOfHeadQuarterComboBox option:selected').val();
                var phoneNumber = $('#PhoneNumberAdditionalSearch').val();
                var departmentId = $('#Departments option:selected').val();
                var startDate = $('#StartDatePicker').val();
                var endDate = $('#EndDatePicker').val();
                var job = $('#Positions option:selected').val();                

                //реализация расширенного поиска
                url = '@Url.Action("SearchEmployeesAdvanced", "Home")';

                dataParam = {
                    divisionId: divisionId,
                    placeId: placeId,
                    isMemberOfHeadquarter: isMember,
                    phoneNumber: phoneNumber,
                    departmentId: departmentId,
                    dateStart: startDate,
                    dateEnd: endDate,
                    job: job,
                    employeeName: escape(value),
                    startIndex: 0
                };
            }

            $('.searchProgress').show();

            loadSearchPageResult(url, dataParam);
        });


    $('.advancedSearch').on('click', function(e) {
        //toggle visibility of additional search panel
        $('.additionalSearchPanel').slideToggle('slow');
        
        $(e.target).toggleClass('advancedSearchOpened');

        var arrow = $(e.target).children('span');
        if (arrow.length > 0) {
            if (arrow.html() == '↓')
                arrow.text('↑');
            else
                arrow.text('↓');
        }

            });
    });


    function loadSearchPageResult(url, p) {

        $.ajax({
            url: url,
            cache: false,
            data:p
        })
            .done(function(data) {
                var resultDiv = $('#searchResult');
                if (resultDiv != null) {
                    $('.searchProgress').hide();
                    resultDiv.empty();
                    resultDiv.append(data);
                }
            initLyncStatuses();
        });
    };

    $('#Divisions').change(function() {
        var currentDivision = $('#Divisions').val();
        var deprtments = $('#Departments');

        if (currentDivision == "-1") {
            $('#Departments option').remove();
            deprtments.html('<option value="-1">Выберите подразделение</option>');
            deprtments.attr('disabled', '');
        } else {
            var url = '@Url.Action("GetDepartments", "Home", new {divisionId = "-1"})';
            url = url.replace('-1', currentDivision);
            $.getJSON(url, function(data) {
                var items = '<option value=\'-1\'>Выберите подразделение</option>';
                $.each(data, function(i, state) {
                    items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                deprtments.html(items);
                deprtments.removeAttr('disabled');
            });
        }


        $('#Positions option').remove();
        var positions = $('#Positions');
        positions.html('<option>Выберите должность</option>');
        positions.attr('disabled', '');
    });

    $('#Departments').change(function() {
        var currentDepartment = $('#Departments').val();
        var positions = $('#Positions');

        if (currentDepartment == "-1") {
            $('#Positions option').remove();
            positions.html('<option value=\'-1\'>Выберите должность</option>');
            positions.attr('disabled', '');
        } else {
            var url = '@Url.Action("GetPositions", "Home", new {departmentId = "-1"})';
            url = url.replace('-1', currentDepartment);
            $.getJSON(url, function (data) {
                var items = '<option value="-1">Выберите должность</option>';
                $.each(data, function (i, state) {
                    items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                positions.html(items);
                positions.removeAttr('disabled');
            });
        }
    });
</script>