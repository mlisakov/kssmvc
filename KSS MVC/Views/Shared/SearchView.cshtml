<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-ui.min.js"></script>
<link href="~/Content/jquery-ui/jquery-ui.min.css"/>

@using KSS.Models
@using KSS.Server.Entities
@model SearchViewModel
@{
    Layout = "";
}

<div class="searchLayout">
    <h3 class="departmentHeader">@Model.GetDepartmentName()
        <img class="searchProgress" src="~/Images/progress.gif" />
    </h3>
    @*    @using (Html.BeginForm("SearchEmployees", "Home"))
    {
        <div class="shortSearch">
            @Html.TextBox("employeeName", null, new {@class = "departmentSearchText", @placeholder = "поиск по ФИО", @maxlength = "100"})
            <input type="submit" class="departmentSearchButton" value="Найти" />
        </div>
    }*@
    
    <div class="shortSearch">
        <input id="searchText" type="text" class="departmentSearchText" placeholder="поиск по ФИО" maxlength="100"/>
        <input id="searchBtn" type="button" class="departmentSearchButton" value="найти"  />        
    </div>
    <div class="additionalSearchPanel">
        <div class=" additionalSearchRowFirst additionalSearchRow ">
            <p class="fieldLabel">филиал</p>

            <p class="fieldLabel  rightItem">местоположение</p>            
            <select class="field " id="Divisions">
                 
                <option class="comboBoxItem" value="-1">выберите филиал</option>
                @foreach (DivisionState divState in Model.GetDivisionStates())
                {
                    <option class="comboBoxItem" value='@divState.Id'>@divState.Division</option>
                }
            </select>

            <select class="field rightItem">
                 <option class="comboBoxItem" value="-1">выберите местоположение</option>
                @foreach (KeyValuePair<Guid,String> locality in Model.GetCustomLocality())
                {
                    <option class="comboBoxItem" value='@locality.Key'>@locality.Value</option>
                }
            </select>
        </div>

        <div class="additionalSearchRow">
            <p class="fieldLabel">член штаба</p>
            
            <p class="fieldLabel rightItem">номер телефона</p>

            <select class="field">
                <option class="comboBoxItem" value="true">Да</option>
                <option class="comboBoxItem" selected value="false">Нет</option>
            </select>

            <input type="text" class="field rightItem"/>            
        </div>

        <div class="additionalSearchRow">
            <p class="fieldLabel">подразделение</p>
            
            
            <p class="fieldLabel rightItem">дни рождения</p>

            <select class="field" id="Departments" disabled>
                <option class="comboBoxItem" value='@Guid.Empty'>выберите подразделение</option>
@*                @foreach (DepartmentState depState in Model.GetDepartmentStates())*@
@*                {*@
@*                    <option class="comboBoxItem" value='@depState.Id'>@depState.Department</option>*@
@*                }*@
            </select>
            
            <div class="rightItem">
                <input type="text" class="dataPicker" />
                <p class="dataPickerSeparator">&ndash;</p>
                <input type="text" class="dataPicker" />                   
            </div>

        </div>
        <div class="additionalSearchRow">
            <p class="fieldLabel noFloatItem">должность</p>
            <select class="field " id="Positions" disabled>
                <option class="comboBoxItem" value='@Guid.Empty'>выберите должность</option>
@*                @foreach (PositionState positionState in Model.GetPositionStates())*@
@*                {*@
@*                    <option class="comboBoxItem" value='@positionState.Id'>@positionState.Title</option>*@
@*                }*@
            </select>
            
@*            <input type="text" id="firstDatepicker" />*@
        </div>
    </div>
    

    @*data-url="@Url.Action("SearchEmployees", "Home", new {id = employee.Employee.Id})"*@
    <a class="advancedSearch">Расширенный поиск <span>↓</span></a>
    
    
    <div id="searchResult" class="centralResultPanel">
        <ul class="personUL">

            @foreach (EmployeeModel employee in Model.GetEmployers())
            {
                <li>
                    <div class="lyncStatusDiv"></div>
                    <div class="personIMGLayout">
                        <img class="personIMG" src="http://cp14.nevsepic.com.ua/184/18370/1385021122-haunted__by_senju_hime-d3dj1ah.jpg" />
                    </div>
                    <div class="innerPersonLayout">
                        <h5 class="personName">
                            @*                    <a href='@Url.Action("Index", "Employee", new {id = employee.Employee.Id})'>@employee.Employee.Name</a>*@
                            <a class="emploeeLink" data-url='@Url.Action("Index", "Employee", new {id = employee.Employee.Id})'>@employee.Employee.Name</a>
                        </h5>
                        <p class="personDepartment"> @employee.DepartmentState.Department</p>
                        <p class="personJob">@employee.PositionState.Title</p>
                        <div class="phonesLine">
                            @foreach (EmployeePlace empPlace in employee.EmployeePlaces)
                            {
                                <p class="personCityPhone">33-24;</p>
                                <p class="personMobilePhone">@empPlace.PhoneNumber;</p> @*
                                <p class="personMail">titov.german@rossety.com</p>*@
                            }
                        </div>
                        <div class="phonesLine">
                            @foreach (SpecificStaffPlace specEmpPlace in employee.SpecificStaffPlaces)
                            {
                                <p class="personCityPhone">33-24;</p>
                                <p class="personMobilePhone">@specEmpPlace.PhoneNumber;</p>
                                @*<p class="personMail">titov.german@rossety.com</p>*@
                            }
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
        
@*        <div class="pagesContainer">*@
@*            @{*@
@*                if (ViewBag.StartIndex > 0)*@
@*                {*@
@*                    <p class="paginationArrow">←</p>*@
@*//                Guid? divisionId, Guid? departmentId, int startIndex = 0*@
@*                    <a class="paginationNavigationLink" data-url='@Url.Action("SearchEmployeesAdvanced", "Home", new { divisionId = ViewBag.DivisionId,departmentId = ViewBag.DepartmentId, startIndex = ViewBag.StartIndex - 1 })'>Назад</a>*@
@*                }*@
@*                else*@
@*                {*@
@*                    <p class="paginationArrow" style="visibility: collapse">←</p>*@
@*                    <a class="paginationNavigationLink" style="visibility: collapse">Назад</a>*@
@*                }*@
@**@
@*                if (ViewBag.StartIndex + 1 < ViewBag.PageCount)*@
@*                {*@
@*                    <a class="paginationNavigationLink forwardLink" data-url='@Url.Action("SearchEmployees", "Home", new { divisionId = ViewBag.DivisionId, departmentId = ViewBag.DepartmentId, startIndex = ViewBag.StartIndex + 1 })'>Вперед</a>*@
@*                    <p class="paginationArrow">→</p>*@
@*                }*@
@*            }*@
@*        </div>*@
@*    </div>*@

</div>


<script type="text/javascript">

    $(document).ready(function () {

        $('#firstDatepicker').datepicker();

        $('.emploeeLink').on('click', function(e) {

            var currentPageItem = $(e.target);
            var url = currentPageItem.data('url');
            $('.progress').show();

            ChangeSelectedPage(0);

            ClearTreeSelection();
            loadSearchPage(url);
        });

        $('#searchBtn').on('click', function(e) {
            var value = $('#searchText').val();
            var url = '@Url.Action("SearchEmployees", "Home", new { employeeName = "-1", startIndex = 0})';
            url = url.replace('-1', value);

            if ($('#advancedSearch').hasClass('advancedSearchOpened')) {

                //реализация расширенного поиска
//                var divValue = $('#Divisions :selected').val();
//                var url = '@Url.Action("SearchEmployees", "Home", new { divisionId = "-5",startIndex = 0 })';
//                url = url.replace('-5', divValue);
            }

            $('.searchProgress').show();

            loadSearchPageResult(url);
        });


        $('.advancedSearch').on('click', function(e) {
            //toggle visibility of additional search panel
            $('.additionalSearchPanel').slideToggle('slow');

            $(e.target).toggleClass('advancedSearchOpened');

            var arrow = $(e.target).children('span');
            if (arrow.length > 0) {
                if (arrow.html() == '↓')
                    arrow.text('↑');
                else
                    arrow.text('↓');
            }

        });
    });

    function loadSearchPageResult(url) {
        $.get(url, function(data) {
            var resultDiv = $('#searchResult');
            if (resultDiv != null) {
                $('.searchProgress').hide();
                resultDiv.empty();
                resultDiv.append(data);
            }
        });
    };

    $('#Divisions').change(function() {
        var currentDivision = $('#Divisions').val();
        var deprtments = $('#Departments');

        if (currentDivision == "-1") {
            $('#Departments option').remove();
            deprtments.html('<option value="-1">Выберите подразделение</option>');
            deprtments.attr('disabled', '');


        } else {
            var url = '@Url.Action("GetDepartments", "Home", new {divisionId = "-1"})';
            url = url.replace('-1', currentDivision);
            $.getJSON(url, function(data) {
                var items = '<option value="-1">Выберите подразделение</option>';
                $.each(data, function(i, state) {
                    items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                deprtments.html(items);
                deprtments.removeAttr('disabled');
            });
        }


        $('#Positions option').remove();
        var positions = $('#Positions');
        positions.html('<option>Выберите должность</option>');
        positions.attr('disabled', '');
    });

    $('#Departments').change(function() {
        var currentDepartment = $('#Departments').val();
        var positions = $('#Positions');

        if (currentDepartment == "-1") {
            $('#Positions option').remove();
            positions.html('<option>Выберите должность</option>');
            positions.attr('disabled', '');
        } else {
            var url = '@Url.Action("GetPositions", "Home", new {departmentId = "-1"})';
            url = url.replace('-1', currentDepartment);
            $.getJSON(url, function (data) {
                var items = '<option>Выберите должность</option>';
                $.each(data, function (i, state) {
                    items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                positions.html(items);
                positions.removeAttr('disabled');
            });
        }
     });
</script>