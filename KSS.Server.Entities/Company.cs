//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentState_Department", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Department), "DepartmentState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentState_Department1", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Department), "DepartmentState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Position_Department", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Department), "Position", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Position), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaff_Department", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Department), "SpecificStaff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Staff_Department", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Department), "Staff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Staff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.DepartmentSpecificState), "DepartmentSpecificState1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentSpecificState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "DepartmentSpecificState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentSpecificState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.DepartmentSpecificState), "SpecificStaff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentState_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "DepartmentState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DepartmentState_Employee", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Employee), "DepartmentState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DepartmentState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "DivisionPhoneCode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DivisionPhoneCode), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division1", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "DivisionPhoneCode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DivisionPhoneCode), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DivisionState_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "DivisionState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DivisionState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_DivisionState_Division1", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Division), "DivisionState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.DivisionState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Location_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Division), "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Location), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_TerritoryState_Division", "Division", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Division), "TerritoryState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.TerritoryState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_EmployeePlace_Employee", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Employee), "EmployeePlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.EmployeePlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Favorites_Employee_EmployeeId", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Employee), "Favorite", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Favorite), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Favorites_Employee_LinkedEmployeeId", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Employee), "Favorite", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Favorite), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaff_Employee", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Employee), "SpecificStaff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Staff_Employee", "Employee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Employee), "Staff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Staff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_EmployeePlace_Location", "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Location), "EmployeePlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.EmployeePlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_EmployeePlace_PhoneType", "PhoneType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.PhoneType), "EmployeePlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.EmployeePlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Location_Locality", "Locality", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Locality), "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Location), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Location_PhoneZoneInt", "PhoneZoneInt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.PhoneZoneInt), "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Location), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Location_Territory", "Territory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Territory), "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Location), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_Location", "Location", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Location), "SpecificStaffPlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaffPlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.PhoneZoneInt), "PhoneMatrixInt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.PhoneMatrixInt), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.PhoneZoneInt), "PhoneMatrixInt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.PhoneMatrixInt), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_PhoneType", "PhoneType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.PhoneType), "SpecificStaffPlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaffPlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_PositionState_Position", "Position", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Position), "PositionState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.PositionState), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_Staff_Position", "Position", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KSS.Server.Entities.Position), "Staff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.Staff), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.SpecificStaff), "SpecificStaffPlace", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.SpecificStaffPlace), true)]
[assembly: EdmRelationshipAttribute("KSS.Server.Entities", "FK_TerritoryState_Territory", "Territory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(KSS.Server.Entities.Territory), "TerritoryState", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KSS.Server.Entities.TerritoryState), true)]

#endregion

namespace KSS.Server.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CompanyBaseModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CompanyBaseModel object using the connection string found in the 'CompanyBaseModel' section of the application configuration file.
        /// </summary>
        public CompanyBaseModel() : base("name=CompanyBaseModel", "CompanyBaseModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CompanyBaseModel object.
        /// </summary>
        public CompanyBaseModel(string connectionString) : base(connectionString, "CompanyBaseModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CompanyBaseModel object.
        /// </summary>
        public CompanyBaseModel(EntityConnection connection) : base(connection, "CompanyBaseModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Decrease> Decreases
        {
            get
            {
                if ((_Decreases == null))
                {
                    _Decreases = base.CreateObjectSet<Decrease>("Decreases");
                }
                return _Decreases;
            }
        }
        private ObjectSet<Decrease> _Decreases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentSpecificState> DepartmentSpecificStates
        {
            get
            {
                if ((_DepartmentSpecificStates == null))
                {
                    _DepartmentSpecificStates = base.CreateObjectSet<DepartmentSpecificState>("DepartmentSpecificStates");
                }
                return _DepartmentSpecificStates;
            }
        }
        private ObjectSet<DepartmentSpecificState> _DepartmentSpecificStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentState> DepartmentStates
        {
            get
            {
                if ((_DepartmentStates == null))
                {
                    _DepartmentStates = base.CreateObjectSet<DepartmentState>("DepartmentStates");
                }
                return _DepartmentStates;
            }
        }
        private ObjectSet<DepartmentState> _DepartmentStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Division> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Division>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Division> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DivisionPhoneCode> DivisionPhoneCodes
        {
            get
            {
                if ((_DivisionPhoneCodes == null))
                {
                    _DivisionPhoneCodes = base.CreateObjectSet<DivisionPhoneCode>("DivisionPhoneCodes");
                }
                return _DivisionPhoneCodes;
            }
        }
        private ObjectSet<DivisionPhoneCode> _DivisionPhoneCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DivisionState> DivisionStates
        {
            get
            {
                if ((_DivisionStates == null))
                {
                    _DivisionStates = base.CreateObjectSet<DivisionState>("DivisionStates");
                }
                return _DivisionStates;
            }
        }
        private ObjectSet<DivisionState> _DivisionStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePlace> EmployeePlaces
        {
            get
            {
                if ((_EmployeePlaces == null))
                {
                    _EmployeePlaces = base.CreateObjectSet<EmployeePlace>("EmployeePlaces");
                }
                return _EmployeePlaces;
            }
        }
        private ObjectSet<EmployeePlace> _EmployeePlaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Favorite> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorite>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorite> _Favorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HistoryUser> HistoryUsers
        {
            get
            {
                if ((_HistoryUsers == null))
                {
                    _HistoryUsers = base.CreateObjectSet<HistoryUser>("HistoryUsers");
                }
                return _HistoryUsers;
            }
        }
        private ObjectSet<HistoryUser> _HistoryUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Locality> Localities
        {
            get
            {
                if ((_Localities == null))
                {
                    _Localities = base.CreateObjectSet<Locality>("Localities");
                }
                return _Localities;
            }
        }
        private ObjectSet<Locality> _Localities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operator> Operators
        {
            get
            {
                if ((_Operators == null))
                {
                    _Operators = base.CreateObjectSet<Operator>("Operators");
                }
                return _Operators;
            }
        }
        private ObjectSet<Operator> _Operators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Option> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Option>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Option> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneMatrixInt> PhoneMatrixInts
        {
            get
            {
                if ((_PhoneMatrixInts == null))
                {
                    _PhoneMatrixInts = base.CreateObjectSet<PhoneMatrixInt>("PhoneMatrixInts");
                }
                return _PhoneMatrixInts;
            }
        }
        private ObjectSet<PhoneMatrixInt> _PhoneMatrixInts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneMatrixIntFull> PhoneMatrixIntFulls
        {
            get
            {
                if ((_PhoneMatrixIntFulls == null))
                {
                    _PhoneMatrixIntFulls = base.CreateObjectSet<PhoneMatrixIntFull>("PhoneMatrixIntFulls");
                }
                return _PhoneMatrixIntFulls;
            }
        }
        private ObjectSet<PhoneMatrixIntFull> _PhoneMatrixIntFulls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneType> PhoneTypes
        {
            get
            {
                if ((_PhoneTypes == null))
                {
                    _PhoneTypes = base.CreateObjectSet<PhoneType>("PhoneTypes");
                }
                return _PhoneTypes;
            }
        }
        private ObjectSet<PhoneType> _PhoneTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneZoneInt> PhoneZoneInts
        {
            get
            {
                if ((_PhoneZoneInts == null))
                {
                    _PhoneZoneInts = base.CreateObjectSet<PhoneZoneInt>("PhoneZoneInts");
                }
                return _PhoneZoneInts;
            }
        }
        private ObjectSet<PhoneZoneInt> _PhoneZoneInts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PositionState> PositionStates
        {
            get
            {
                if ((_PositionStates == null))
                {
                    _PositionStates = base.CreateObjectSet<PositionState>("PositionStates");
                }
                return _PositionStates;
            }
        }
        private ObjectSet<PositionState> _PositionStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecificStaff> SpecificStaffs
        {
            get
            {
                if ((_SpecificStaffs == null))
                {
                    _SpecificStaffs = base.CreateObjectSet<SpecificStaff>("SpecificStaffs");
                }
                return _SpecificStaffs;
            }
        }
        private ObjectSet<SpecificStaff> _SpecificStaffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecificStaffPlace> SpecificStaffPlaces
        {
            get
            {
                if ((_SpecificStaffPlaces == null))
                {
                    _SpecificStaffPlaces = base.CreateObjectSet<SpecificStaffPlace>("SpecificStaffPlaces");
                }
                return _SpecificStaffPlaces;
            }
        }
        private ObjectSet<SpecificStaffPlace> _SpecificStaffPlaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Territory> Territories
        {
            get
            {
                if ((_Territories == null))
                {
                    _Territories = base.CreateObjectSet<Territory>("Territories");
                }
                return _Territories;
            }
        }
        private ObjectSet<Territory> _Territories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TerritoryState> TerritoryStates
        {
            get
            {
                if ((_TerritoryStates == null))
                {
                    _TerritoryStates = base.CreateObjectSet<TerritoryState>("TerritoryStates");
                }
                return _TerritoryStates;
            }
        }
        private ObjectSet<TerritoryState> _TerritoryStates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Decreases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecreases(Decrease decrease)
        {
            base.AddObject("Decreases", decrease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentSpecificStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentSpecificStates(DepartmentSpecificState departmentSpecificState)
        {
            base.AddObject("DepartmentSpecificStates", departmentSpecificState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentStates(DepartmentState departmentState)
        {
            base.AddObject("DepartmentStates", departmentState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Division division)
        {
            base.AddObject("Divisions", division);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DivisionPhoneCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisionPhoneCodes(DivisionPhoneCode divisionPhoneCode)
        {
            base.AddObject("DivisionPhoneCodes", divisionPhoneCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DivisionStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisionStates(DivisionState divisionState)
        {
            base.AddObject("DivisionStates", divisionState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePlaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePlaces(EmployeePlace employeePlace)
        {
            base.AddObject("EmployeePlaces", employeePlace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Favorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFavorites(Favorite favorite)
        {
            base.AddObject("Favorites", favorite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistoryUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoryUsers(HistoryUser historyUser)
        {
            base.AddObject("HistoryUsers", historyUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Localities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalities(Locality locality)
        {
            base.AddObject("Localities", locality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperators(Operator @operator)
        {
            base.AddObject("Operators", @operator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Option option)
        {
            base.AddObject("Options", option);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneMatrixInts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneMatrixInts(PhoneMatrixInt phoneMatrixInt)
        {
            base.AddObject("PhoneMatrixInts", phoneMatrixInt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneMatrixIntFulls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneMatrixIntFulls(PhoneMatrixIntFull phoneMatrixIntFull)
        {
            base.AddObject("PhoneMatrixIntFulls", phoneMatrixIntFull);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneTypes(PhoneType phoneType)
        {
            base.AddObject("PhoneTypes", phoneType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneZoneInts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneZoneInts(PhoneZoneInt phoneZoneInt)
        {
            base.AddObject("PhoneZoneInts", phoneZoneInt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PositionStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositionStates(PositionState positionState)
        {
            base.AddObject("PositionStates", positionState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecificStaffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecificStaffs(SpecificStaff specificStaff)
        {
            base.AddObject("SpecificStaffs", specificStaff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecificStaffPlaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecificStaffPlaces(SpecificStaffPlace specificStaffPlace)
        {
            base.AddObject("SpecificStaffPlaces", specificStaffPlace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Territories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritories(Territory territory)
        {
            base.AddObject("Territories", territory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TerritoryStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritoryStates(TerritoryState territoryState)
        {
            base.AddObject("TerritoryStates", territoryState);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Decrease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Decrease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Decrease object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="original">Initial value of the Original property.</param>
        /// <param name="brief">Initial value of the Brief property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static Decrease CreateDecrease(global::System.Guid id, global::System.String original, global::System.String brief, global::System.Int32 priority)
        {
            Decrease decrease = new Decrease();
            decrease.Id = id;
            decrease.Original = original;
            decrease.Brief = brief;
            decrease.Priority = priority;
            return decrease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Original
        {
            get
            {
                return _Original;
            }
            set
            {
                OnOriginalChanging(value);
                ReportPropertyChanging("Original");
                _Original = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Original");
                OnOriginalChanged();
            }
        }
        private global::System.String _Original;
        partial void OnOriginalChanging(global::System.String value);
        partial void OnOriginalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brief
        {
            get
            {
                return _Brief;
            }
            set
            {
                OnBriefChanging(value);
                ReportPropertyChanging("Brief");
                _Brief = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brief");
                OnBriefChanged();
            }
        }
        private global::System.String _Brief;
        partial void OnBriefChanging(global::System.String value);
        partial void OnBriefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="ranking">Initial value of the Ranking property.</param>
        /// <param name="manualInput">Initial value of the ManualInput property.</param>
        public static Department CreateDepartment(global::System.Guid id, global::System.String code, global::System.String ranking, global::System.Boolean manualInput)
        {
            Department department = new Department();
            department.Id = id;
            department.Code = code;
            department.Ranking = ranking;
            department.ManualInput = manualInput;
            return department;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private global::System.String _Ranking;
        partial void OnRankingChanging(global::System.String value);
        partial void OnRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ManualInput
        {
            get
            {
                return _ManualInput;
            }
            set
            {
                OnManualInputChanging(value);
                ReportPropertyChanging("ManualInput");
                _ManualInput = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManualInput");
                OnManualInputChanged();
            }
        }
        private global::System.Boolean _ManualInput;
        partial void OnManualInputChanging(global::System.Boolean value);
        partial void OnManualInputChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RossetiCode
        {
            get
            {
                return _RossetiCode;
            }
            set
            {
                OnRossetiCodeChanging(value);
                ReportPropertyChanging("RossetiCode");
                _RossetiCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RossetiCode");
                OnRossetiCodeChanged();
            }
        }
        private global::System.String _RossetiCode;
        partial void OnRossetiCodeChanging(global::System.String value);
        partial void OnRossetiCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Department", "DepartmentState")]
        public EntityCollection<DepartmentState> DepartmentStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Department", "DepartmentState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Department", "DepartmentState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Department1", "DepartmentState")]
        public EntityCollection<DepartmentState> DepartmentStates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Department1", "DepartmentState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Department1", "DepartmentState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Position_Department", "Position")]
        public EntityCollection<Position> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("KSS.Server.Entities.FK_Position_Department", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("KSS.Server.Entities.FK_Position_Department", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_Department", "SpecificStaff")]
        public EntityCollection<SpecificStaff> SpecificStaffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_Department", "SpecificStaff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_Department", "SpecificStaff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Department", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Department", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Department", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="DepartmentSpecificState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentSpecificState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentSpecificState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static DepartmentSpecificState CreateDepartmentSpecificState(global::System.Guid id, global::System.Guid divisionId, global::System.String name, global::System.DateTime validationDate)
        {
            DepartmentSpecificState departmentSpecificState = new DepartmentSpecificState();
            departmentSpecificState.Id = id;
            departmentSpecificState.DivisionId = divisionId;
            departmentSpecificState.Name = name;
            departmentSpecificState.ValidationDate = validationDate;
            return departmentSpecificState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Guid _DivisionId;
        partial void OnDivisionIdChanging(global::System.Guid value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                OnValidationDateChanging(value);
                ReportPropertyChanging("ValidationDate");
                _ValidationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidationDate");
                OnValidationDateChanged();
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState1")]
        public EntityCollection<DepartmentSpecificState> DepartmentSpecificState1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState")]
        public DepartmentSpecificState DepartmentSpecificState2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartmentSpecificState> DepartmentSpecificState2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_DepartmentSpecificState", "DepartmentSpecificState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_DepartmentSpecificState", "SpecificStaff")]
        public EntityCollection<SpecificStaff> SpecificStaffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "SpecificStaff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "SpecificStaff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="DepartmentState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static DepartmentState CreateDepartmentState(global::System.Guid id, global::System.Guid divisionId, global::System.String department, global::System.DateTime validationDate)
        {
            DepartmentState departmentState = new DepartmentState();
            departmentState.Id = id;
            departmentState.DivisionId = divisionId;
            departmentState.Department = department;
            departmentState.ValidationDate = validationDate;
            return departmentState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Guid _DivisionId;
        partial void OnDivisionIdChanging(global::System.Guid value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChiefId
        {
            get
            {
                return _ChiefId;
            }
            set
            {
                OnChiefIdChanging(value);
                ReportPropertyChanging("ChiefId");
                _ChiefId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChiefId");
                OnChiefIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChiefId;
        partial void OnChiefIdChanging(Nullable<global::System.Guid> value);
        partial void OnChiefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                if (_ValidationDate != value)
                {
                    OnValidationDateChanging(value);
                    ReportPropertyChanging("ValidationDate");
                    _ValidationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationDate");
                    OnValidationDateChanged();
                }
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Department", "Department")]
        public Department Department1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Department1", "Department")]
        public Department Department2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department1", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department1", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department1", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KSS.Server.Entities.FK_DepartmentState_Department1", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentState_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentState_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentState_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DepartmentState_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_DepartmentState_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_DepartmentState_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_DepartmentState_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_DepartmentState_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Division")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Division : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Division object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="ranking">Initial value of the Ranking property.</param>
        /// <param name="essential">Initial value of the Essential property.</param>
        public static Division CreateDivision(global::System.Guid id, global::System.String code, global::System.String ranking, global::System.Boolean essential)
        {
            Division division = new Division();
            division.Id = id;
            division.Code = code;
            division.Ranking = ranking;
            division.Essential = essential;
            return division;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private global::System.String _Ranking;
        partial void OnRankingChanging(global::System.String value);
        partial void OnRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Essential
        {
            get
            {
                return _Essential;
            }
            set
            {
                OnEssentialChanging(value);
                ReportPropertyChanging("Essential");
                _Essential = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Essential");
                OnEssentialChanged();
            }
        }
        private global::System.Boolean _Essential;
        partial void OnEssentialChanging(global::System.Boolean value);
        partial void OnEssentialChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentSpecificState_Division", "DepartmentSpecificState")]
        public EntityCollection<DepartmentSpecificState> DepartmentSpecificStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "DepartmentSpecificState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentSpecificState>("KSS.Server.Entities.FK_DepartmentSpecificState_Division", "DepartmentSpecificState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Division", "DepartmentState")]
        public EntityCollection<DepartmentState> DepartmentStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Division", "DepartmentState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Division", "DepartmentState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division", "DivisionPhoneCode")]
        public EntityCollection<DivisionPhoneCode> DivisionPhoneCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DivisionPhoneCode>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "DivisionPhoneCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DivisionPhoneCode>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "DivisionPhoneCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division1", "DivisionPhoneCode")]
        public EntityCollection<DivisionPhoneCode> DivisionPhoneCodes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DivisionPhoneCode>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "DivisionPhoneCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DivisionPhoneCode>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "DivisionPhoneCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionState_Division", "DivisionState")]
        public EntityCollection<DivisionState> DivisionStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DivisionState>("KSS.Server.Entities.FK_DivisionState_Division", "DivisionState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DivisionState>("KSS.Server.Entities.FK_DivisionState_Division", "DivisionState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionState_Division1", "DivisionState")]
        public EntityCollection<DivisionState> DivisionStates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DivisionState>("KSS.Server.Entities.FK_DivisionState_Division1", "DivisionState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DivisionState>("KSS.Server.Entities.FK_DivisionState_Division1", "DivisionState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Division", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Division", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Division", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_TerritoryState_Division", "TerritoryState")]
        public EntityCollection<TerritoryState> TerritoryStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TerritoryState>("KSS.Server.Entities.FK_TerritoryState_Division", "TerritoryState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TerritoryState>("KSS.Server.Entities.FK_TerritoryState_Division", "TerritoryState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="DivisionPhoneCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DivisionPhoneCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DivisionPhoneCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="divisionFromId">Initial value of the DivisionFromId property.</param>
        /// <param name="divisionToId">Initial value of the DivisionToId property.</param>
        /// <param name="intPhoneCode">Initial value of the IntPhoneCode property.</param>
        public static DivisionPhoneCode CreateDivisionPhoneCode(global::System.Guid id, global::System.Guid divisionFromId, global::System.Guid divisionToId, global::System.String intPhoneCode)
        {
            DivisionPhoneCode divisionPhoneCode = new DivisionPhoneCode();
            divisionPhoneCode.Id = id;
            divisionPhoneCode.DivisionFromId = divisionFromId;
            divisionPhoneCode.DivisionToId = divisionToId;
            divisionPhoneCode.IntPhoneCode = intPhoneCode;
            return divisionPhoneCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DivisionFromId
        {
            get
            {
                return _DivisionFromId;
            }
            set
            {
                OnDivisionFromIdChanging(value);
                ReportPropertyChanging("DivisionFromId");
                _DivisionFromId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionFromId");
                OnDivisionFromIdChanged();
            }
        }
        private global::System.Guid _DivisionFromId;
        partial void OnDivisionFromIdChanging(global::System.Guid value);
        partial void OnDivisionFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DivisionToId
        {
            get
            {
                return _DivisionToId;
            }
            set
            {
                OnDivisionToIdChanging(value);
                ReportPropertyChanging("DivisionToId");
                _DivisionToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionToId");
                OnDivisionToIdChanged();
            }
        }
        private global::System.Guid _DivisionToId;
        partial void OnDivisionToIdChanging(global::System.Guid value);
        partial void OnDivisionToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IntPhoneCode
        {
            get
            {
                return _IntPhoneCode;
            }
            set
            {
                OnIntPhoneCodeChanging(value);
                ReportPropertyChanging("IntPhoneCode");
                _IntPhoneCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IntPhoneCode");
                OnIntPhoneCodeChanged();
            }
        }
        private global::System.String _IntPhoneCode;
        partial void OnIntPhoneCodeChanging(global::System.String value);
        partial void OnIntPhoneCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionPhoneCode_Division1", "Division")]
        public Division Division1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> Division1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DivisionPhoneCode_Division1", "Division", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="DivisionState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DivisionState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DivisionState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="division">Initial value of the Division property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static DivisionState CreateDivisionState(global::System.Guid id, global::System.String division, global::System.DateTime validationDate)
        {
            DivisionState divisionState = new DivisionState();
            divisionState.Id = id;
            divisionState.Division = division;
            divisionState.ValidationDate = validationDate;
            return divisionState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                OnDivisionChanging(value);
                ReportPropertyChanging("Division");
                _Division = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Division");
                OnDivisionChanged();
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DivisionBrief
        {
            get
            {
                return _DivisionBrief;
            }
            set
            {
                OnDivisionBriefChanging(value);
                ReportPropertyChanging("DivisionBrief");
                _DivisionBrief = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DivisionBrief");
                OnDivisionBriefChanged();
            }
        }
        private global::System.String _DivisionBrief;
        partial void OnDivisionBriefChanging(global::System.String value);
        partial void OnDivisionBriefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                if (_ValidationDate != value)
                {
                    OnValidationDateChanging(value);
                    ReportPropertyChanging("ValidationDate");
                    _ValidationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationDate");
                    OnValidationDateChanged();
                }
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionState_Division", "Division")]
        public Division Division1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> Division1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DivisionState_Division1", "Division")]
        public Division Division2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division1", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division1", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> Division2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division1", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_DivisionState_Division1", "Division", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="manualInput">Initial value of the ManualInput property.</param>
        /// <param name="photoDate">Initial value of the PhotoDate property.</param>
        /// <param name="photoAllowed">Initial value of the PhotoAllowed property.</param>
        /// <param name="photoUpdated">Initial value of the PhotoUpdated property.</param>
        /// <param name="photoManualInput">Initial value of the PhotoManualInput property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static Employee CreateEmployee(global::System.Guid id, global::System.String code, global::System.Guid personId, global::System.String name, global::System.Boolean manualInput, global::System.DateTime photoDate, global::System.Boolean photoAllowed, global::System.Boolean photoUpdated, global::System.Boolean photoManualInput, global::System.Int32 position)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.Code = code;
            employee.PersonId = personId;
            employee.Name = name;
            employee.ManualInput = manualInput;
            employee.PhotoDate = photoDate;
            employee.PhotoAllowed = photoAllowed;
            employee.PhotoUpdated = photoUpdated;
            employee.PhotoManualInput = photoManualInput;
            employee.Position = position;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDay
        {
            get
            {
                return _BirthDay;
            }
            set
            {
                OnBirthDayChanging(value);
                ReportPropertyChanging("BirthDay");
                _BirthDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDay");
                OnBirthDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDay;
        partial void OnBirthDayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ITN
        {
            get
            {
                return _ITN;
            }
            set
            {
                OnITNChanging(value);
                ReportPropertyChanging("ITN");
                _ITN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ITN");
                OnITNChanged();
            }
        }
        private global::System.String _ITN;
        partial void OnITNChanging(global::System.String value);
        partial void OnITNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeriesPas
        {
            get
            {
                return _SeriesPas;
            }
            set
            {
                OnSeriesPasChanging(value);
                ReportPropertyChanging("SeriesPas");
                _SeriesPas = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeriesPas");
                OnSeriesPasChanged();
            }
        }
        private global::System.String _SeriesPas;
        partial void OnSeriesPasChanging(global::System.String value);
        partial void OnSeriesPasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumberPas
        {
            get
            {
                return _NumberPas;
            }
            set
            {
                OnNumberPasChanging(value);
                ReportPropertyChanging("NumberPas");
                _NumberPas = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumberPas");
                OnNumberPasChanged();
            }
        }
        private global::System.String _NumberPas;
        partial void OnNumberPasChanging(global::System.String value);
        partial void OnNumberPasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasDepart
        {
            get
            {
                return _PasDepart;
            }
            set
            {
                OnPasDepartChanging(value);
                ReportPropertyChanging("PasDepart");
                _PasDepart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasDepart");
                OnPasDepartChanged();
            }
        }
        private global::System.String _PasDepart;
        partial void OnPasDepartChanging(global::System.String value);
        partial void OnPasDepartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasIssue
        {
            get
            {
                return _PasIssue;
            }
            set
            {
                OnPasIssueChanging(value);
                ReportPropertyChanging("PasIssue");
                _PasIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasIssue");
                OnPasIssueChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasIssue;
        partial void OnPasIssueChanging(Nullable<global::System.DateTime> value);
        partial void OnPasIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountControl
        {
            get
            {
                return _AccountControl;
            }
            set
            {
                OnAccountControlChanging(value);
                ReportPropertyChanging("AccountControl");
                _AccountControl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountControl");
                OnAccountControlChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountControl;
        partial void OnAccountControlChanging(Nullable<global::System.Int32> value);
        partial void OnAccountControlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Updated;
        partial void OnUpdatedChanging(Nullable<global::System.Boolean> value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ManualInput
        {
            get
            {
                return _ManualInput;
            }
            set
            {
                OnManualInputChanging(value);
                ReportPropertyChanging("ManualInput");
                _ManualInput = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManualInput");
                OnManualInputChanged();
            }
        }
        private global::System.Boolean _ManualInput;
        partial void OnManualInputChanging(global::System.Boolean value);
        partial void OnManualInputChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PhotoDate
        {
            get
            {
                return _PhotoDate;
            }
            set
            {
                OnPhotoDateChanging(value);
                ReportPropertyChanging("PhotoDate");
                _PhotoDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoDate");
                OnPhotoDateChanged();
            }
        }
        private global::System.DateTime _PhotoDate;
        partial void OnPhotoDateChanging(global::System.DateTime value);
        partial void OnPhotoDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoFile
        {
            get
            {
                return _PhotoFile;
            }
            set
            {
                OnPhotoFileChanging(value);
                ReportPropertyChanging("PhotoFile");
                _PhotoFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoFile");
                OnPhotoFileChanged();
            }
        }
        private global::System.String _PhotoFile;
        partial void OnPhotoFileChanging(global::System.String value);
        partial void OnPhotoFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhotoAllowed
        {
            get
            {
                return _PhotoAllowed;
            }
            set
            {
                OnPhotoAllowedChanging(value);
                ReportPropertyChanging("PhotoAllowed");
                _PhotoAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoAllowed");
                OnPhotoAllowedChanged();
            }
        }
        private global::System.Boolean _PhotoAllowed;
        partial void OnPhotoAllowedChanging(global::System.Boolean value);
        partial void OnPhotoAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhotoUpdated
        {
            get
            {
                return _PhotoUpdated;
            }
            set
            {
                OnPhotoUpdatedChanging(value);
                ReportPropertyChanging("PhotoUpdated");
                _PhotoUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUpdated");
                OnPhotoUpdatedChanged();
            }
        }
        private global::System.Boolean _PhotoUpdated;
        partial void OnPhotoUpdatedChanging(global::System.Boolean value);
        partial void OnPhotoUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhotoManualInput
        {
            get
            {
                return _PhotoManualInput;
            }
            set
            {
                OnPhotoManualInputChanging(value);
                ReportPropertyChanging("PhotoManualInput");
                _PhotoManualInput = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoManualInput");
                OnPhotoManualInputChanged();
            }
        }
        private global::System.Boolean _PhotoManualInput;
        partial void OnPhotoManualInputChanging(global::System.Boolean value);
        partial void OnPhotoManualInputChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdState
        {
            get
            {
                return _AdState;
            }
            set
            {
                OnAdStateChanging(value);
                ReportPropertyChanging("AdState");
                _AdState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdState");
                OnAdStateChanged();
            }
        }
        private Nullable<global::System.Int32> _AdState;
        partial void OnAdStateChanging(Nullable<global::System.Int32> value);
        partial void OnAdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAdministrator
        {
            get
            {
                return _isAdministrator;
            }
            set
            {
                OnisAdministratorChanging(value);
                ReportPropertyChanging("isAdministrator");
                _isAdministrator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAdministrator");
                OnisAdministratorChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAdministrator;
        partial void OnisAdministratorChanging(Nullable<global::System.Boolean> value);
        partial void OnisAdministratorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RossetiCode
        {
            get
            {
                return _RossetiCode;
            }
            set
            {
                OnRossetiCodeChanging(value);
                ReportPropertyChanging("RossetiCode");
                _RossetiCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RossetiCode");
                OnRossetiCodeChanged();
            }
        }
        private global::System.String _RossetiCode;
        partial void OnRossetiCodeChanging(global::System.String value);
        partial void OnRossetiCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMemberOfHeadquarter
        {
            get
            {
                return _IsMemberOfHeadquarter;
            }
            set
            {
                OnIsMemberOfHeadquarterChanging(value);
                ReportPropertyChanging("IsMemberOfHeadquarter");
                _IsMemberOfHeadquarter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMemberOfHeadquarter");
                OnIsMemberOfHeadquarterChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMemberOfHeadquarter;
        partial void OnIsMemberOfHeadquarterChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMemberOfHeadquarterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_DepartmentState_Employee", "DepartmentState")]
        public EntityCollection<DepartmentState> DepartmentStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Employee", "DepartmentState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DepartmentState>("KSS.Server.Entities.FK_DepartmentState_Employee", "DepartmentState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_Employee", "EmployeePlace")]
        public EntityCollection<EmployeePlace> EmployeePlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_Employee", "EmployeePlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_Employee", "EmployeePlace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Favorites_Employee_EmployeeId", "Favorite")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Favorite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Favorite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Favorites_Employee_LinkedEmployeeId", "Favorite")]
        public EntityCollection<Favorite> Favorites1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Favorite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Favorite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_Employee", "SpecificStaff")]
        public EntityCollection<SpecificStaff> SpecificStaffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_Employee", "SpecificStaff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaff_Employee", "SpecificStaff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Employee", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Employee", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Employee", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="EmployeePlace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePlace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePlace object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="phoneTypeId">Initial value of the PhoneTypeId property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static EmployeePlace CreateEmployeePlace(global::System.Guid id, global::System.Guid employeeId, global::System.Guid phoneTypeId, global::System.String phoneNumber)
        {
            EmployeePlace employeePlace = new EmployeePlace();
            employeePlace.Id = id;
            employeePlace.EmployeeId = employeeId;
            employeePlace.PhoneTypeId = phoneTypeId;
            employeePlace.PhoneNumber = phoneNumber;
            return employeePlace;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Guid _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Guid value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhoneTypeId
        {
            get
            {
                return _PhoneTypeId;
            }
            set
            {
                OnPhoneTypeIdChanging(value);
                ReportPropertyChanging("PhoneTypeId");
                _PhoneTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneTypeId");
                OnPhoneTypeIdChanged();
            }
        }
        private global::System.Guid _PhoneTypeId;
        partial void OnPhoneTypeIdChanging(global::System.Guid value);
        partial void OnPhoneTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office
        {
            get
            {
                return _Office;
            }
            set
            {
                OnOfficeChanging(value);
                ReportPropertyChanging("Office");
                _Office = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office");
                OnOfficeChanged();
            }
        }
        private global::System.String _Office;
        partial void OnOfficeChanging(global::System.String value);
        partial void OnOfficeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_EmployeePlace_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_EmployeePlace_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_EmployeePlace_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_EmployeePlace_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_EmployeePlace_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_EmployeePlace_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_EmployeePlace_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("KSS.Server.Entities.FK_EmployeePlace_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_PhoneType", "PhoneType")]
        public PhoneType PhoneType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "PhoneType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "PhoneType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneType> PhoneTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "PhoneType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneType>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "PhoneType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Favorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Favorite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Favorite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="linkedEmployeeId">Initial value of the LinkedEmployeeId property.</param>
        public static Favorite CreateFavorite(global::System.Guid id, global::System.Guid employeeId, global::System.Guid linkedEmployeeId)
        {
            Favorite favorite = new Favorite();
            favorite.Id = id;
            favorite.EmployeeId = employeeId;
            favorite.LinkedEmployeeId = linkedEmployeeId;
            return favorite;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Guid _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Guid value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LinkedEmployeeId
        {
            get
            {
                return _LinkedEmployeeId;
            }
            set
            {
                OnLinkedEmployeeIdChanging(value);
                ReportPropertyChanging("LinkedEmployeeId");
                _LinkedEmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkedEmployeeId");
                OnLinkedEmployeeIdChanged();
            }
        }
        private global::System.Guid _LinkedEmployeeId;
        partial void OnLinkedEmployeeIdChanging(global::System.Guid value);
        partial void OnLinkedEmployeeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Favorites_Employee_EmployeeId", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_EmployeeId", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Favorites_Employee_LinkedEmployeeId", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_Favorites_Employee_LinkedEmployeeId", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="HistoryUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HistoryUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HistoryUser object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static HistoryUser CreateHistoryUser(global::System.Int32 id)
        {
            HistoryUser historyUser = new HistoryUser();
            historyUser.id = id;
            return historyUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateIn
        {
            get
            {
                return _dateIn;
            }
            set
            {
                OndateInChanging(value);
                ReportPropertyChanging("dateIn");
                _dateIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateIn");
                OndateInChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateIn;
        partial void OndateInChanging(Nullable<global::System.DateTime> value);
        partial void OndateInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Locality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Locality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="locality1">Initial value of the Locality1 property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="cityPhoneCode">Initial value of the CityPhoneCode property.</param>
        public static Locality CreateLocality(global::System.Guid id, global::System.String locality1, global::System.String region, global::System.String country, global::System.String cityPhoneCode)
        {
            Locality locality = new Locality();
            locality.Id = id;
            locality.Locality1 = locality1;
            locality.Region = region;
            locality.Country = country;
            locality.CityPhoneCode = cityPhoneCode;
            return locality;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Locality1
        {
            get
            {
                return _Locality1;
            }
            set
            {
                OnLocality1Changing(value);
                ReportPropertyChanging("Locality1");
                _Locality1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Locality1");
                OnLocality1Changed();
            }
        }
        private global::System.String _Locality1;
        partial void OnLocality1Changing(global::System.String value);
        partial void OnLocality1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityPhoneCode
        {
            get
            {
                return _CityPhoneCode;
            }
            set
            {
                OnCityPhoneCodeChanging(value);
                ReportPropertyChanging("CityPhoneCode");
                _CityPhoneCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityPhoneCode");
                OnCityPhoneCodeChanged();
            }
        }
        private global::System.String _CityPhoneCode;
        partial void OnCityPhoneCodeChanging(global::System.String value);
        partial void OnCityPhoneCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Locality", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Locality", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Locality", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="localityId">Initial value of the LocalityId property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        public static Location CreateLocation(global::System.Guid id, global::System.Guid divisionId, global::System.Guid localityId, global::System.String street)
        {
            Location location = new Location();
            location.Id = id;
            location.DivisionId = divisionId;
            location.LocalityId = localityId;
            location.Street = street;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Guid _DivisionId;
        partial void OnDivisionIdChanging(global::System.Guid value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocalityId
        {
            get
            {
                return _LocalityId;
            }
            set
            {
                OnLocalityIdChanging(value);
                ReportPropertyChanging("LocalityId");
                _LocalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalityId");
                OnLocalityIdChanged();
            }
        }
        private global::System.Guid _LocalityId;
        partial void OnLocalityIdChanging(global::System.Guid value);
        partial void OnLocalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TerritoryId
        {
            get
            {
                return _TerritoryId;
            }
            set
            {
                OnTerritoryIdChanging(value);
                ReportPropertyChanging("TerritoryId");
                _TerritoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerritoryId");
                OnTerritoryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TerritoryId;
        partial void OnTerritoryIdChanging(Nullable<global::System.Guid> value);
        partial void OnTerritoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Edifice
        {
            get
            {
                return _Edifice;
            }
            set
            {
                OnEdificeChanging(value);
                ReportPropertyChanging("Edifice");
                _Edifice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Edifice");
                OnEdificeChanged();
            }
        }
        private global::System.String _Edifice;
        partial void OnEdificeChanging(global::System.String value);
        partial void OnEdificeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhoneZoneId
        {
            get
            {
                return _PhoneZoneId;
            }
            set
            {
                OnPhoneZoneIdChanging(value);
                ReportPropertyChanging("PhoneZoneId");
                _PhoneZoneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneZoneId");
                OnPhoneZoneIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PhoneZoneId;
        partial void OnPhoneZoneIdChanging(Nullable<global::System.Guid> value);
        partial void OnPhoneZoneIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_Location_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_Location_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_Location_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_Location_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_Location", "EmployeePlace")]
        public EntityCollection<EmployeePlace> EmployeePlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_Location", "EmployeePlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_Location", "EmployeePlace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Locality", "Locality")]
        public Locality Locality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("KSS.Server.Entities.FK_Location_Locality", "Locality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("KSS.Server.Entities.FK_Location_Locality", "Locality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Locality> LocalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("KSS.Server.Entities.FK_Location_Locality", "Locality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Locality>("KSS.Server.Entities.FK_Location_Locality", "Locality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_PhoneZoneInt", "PhoneZoneInt")]
        public PhoneZoneInt PhoneZoneInt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "PhoneZoneInt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "PhoneZoneInt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneZoneInt> PhoneZoneIntReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "PhoneZoneInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "PhoneZoneInt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Territory", "Territory")]
        public Territory Territory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_Location_Territory", "Territory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_Location_Territory", "Territory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Territory> TerritoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_Location_Territory", "Territory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Territory>("KSS.Server.Entities.FK_Location_Territory", "Territory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_Location", "SpecificStaffPlace")]
        public EntityCollection<SpecificStaffPlace> SpecificStaffPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "SpecificStaffPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "SpecificStaffPlace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Operator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operator object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static Operator CreateOperator(global::System.Guid oid)
        {
            Operator @operator = new Operator();
            @operator.Oid = oid;
            return @operator;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Oid
        {
            get
            {
                return _Oid;
            }
            set
            {
                if (_Oid != value)
                {
                    OnOidChanging(value);
                    ReportPropertyChanging("Oid");
                    _Oid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Oid");
                    OnOidChanged();
                }
            }
        }
        private global::System.Guid _Oid;
        partial void OnOidChanging(global::System.Guid value);
        partial void OnOidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThirdName
        {
            get
            {
                return _ThirdName;
            }
            set
            {
                OnThirdNameChanging(value);
                ReportPropertyChanging("ThirdName");
                _ThirdName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThirdName");
                OnThirdNameChanged();
            }
        }
        private global::System.String _ThirdName;
        partial void OnThirdNameChanging(global::System.String value);
        partial void OnThirdNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Option")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Option : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Option object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Option CreateOption(global::System.Guid id)
        {
            Option option = new Option();
            option.Id = id;
            return option;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] DefaultPicture
        {
            get
            {
                return StructuralObject.GetValidValue(_DefaultPicture);
            }
            set
            {
                OnDefaultPictureChanging(value);
                ReportPropertyChanging("DefaultPicture");
                _DefaultPicture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultPicture");
                OnDefaultPictureChanged();
            }
        }
        private global::System.Byte[] _DefaultPicture;
        partial void OnDefaultPictureChanging(global::System.Byte[] value);
        partial void OnDefaultPictureChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="PhoneMatrixInt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneMatrixInt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneMatrixInt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fromId">Initial value of the FromId property.</param>
        /// <param name="toId">Initial value of the ToId property.</param>
        /// <param name="phoneCode">Initial value of the PhoneCode property.</param>
        public static PhoneMatrixInt CreatePhoneMatrixInt(global::System.Guid id, global::System.Guid fromId, global::System.Guid toId, global::System.String phoneCode)
        {
            PhoneMatrixInt phoneMatrixInt = new PhoneMatrixInt();
            phoneMatrixInt.Id = id;
            phoneMatrixInt.FromId = fromId;
            phoneMatrixInt.ToId = toId;
            phoneMatrixInt.PhoneCode = phoneCode;
            return phoneMatrixInt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FromId
        {
            get
            {
                return _FromId;
            }
            set
            {
                OnFromIdChanging(value);
                ReportPropertyChanging("FromId");
                _FromId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromId");
                OnFromIdChanged();
            }
        }
        private global::System.Guid _FromId;
        partial void OnFromIdChanging(global::System.Guid value);
        partial void OnFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ToId
        {
            get
            {
                return _ToId;
            }
            set
            {
                OnToIdChanging(value);
                ReportPropertyChanging("ToId");
                _ToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToId");
                OnToIdChanged();
            }
        }
        private global::System.Guid _ToId;
        partial void OnToIdChanging(global::System.Guid value);
        partial void OnToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneCode
        {
            get
            {
                return _PhoneCode;
            }
            set
            {
                OnPhoneCodeChanging(value);
                ReportPropertyChanging("PhoneCode");
                _PhoneCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneCode");
                OnPhoneCodeChanged();
            }
        }
        private global::System.String _PhoneCode;
        partial void OnPhoneCodeChanging(global::System.String value);
        partial void OnPhoneCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt")]
        public PhoneZoneInt PhoneZoneInt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneZoneInt> PhoneZoneIntReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneZoneInt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt")]
        public PhoneZoneInt PhoneZoneInt1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneZoneInt> PhoneZoneInt1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneZoneInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneZoneInt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="PhoneMatrixIntFull")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneMatrixIntFull : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneMatrixIntFull object.
        /// </summary>
        /// <param name="fromId">Initial value of the FromId property.</param>
        /// <param name="toId">Initial value of the ToId property.</param>
        public static PhoneMatrixIntFull CreatePhoneMatrixIntFull(global::System.Guid fromId, global::System.Guid toId)
        {
            PhoneMatrixIntFull phoneMatrixIntFull = new PhoneMatrixIntFull();
            phoneMatrixIntFull.FromId = fromId;
            phoneMatrixIntFull.ToId = toId;
            return phoneMatrixIntFull;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private Nullable<global::System.Guid> _Id;
        partial void OnIdChanging(Nullable<global::System.Guid> value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FromId
        {
            get
            {
                return _FromId;
            }
            set
            {
                if (_FromId != value)
                {
                    OnFromIdChanging(value);
                    ReportPropertyChanging("FromId");
                    _FromId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FromId");
                    OnFromIdChanged();
                }
            }
        }
        private global::System.Guid _FromId;
        partial void OnFromIdChanging(global::System.Guid value);
        partial void OnFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ToId
        {
            get
            {
                return _ToId;
            }
            set
            {
                if (_ToId != value)
                {
                    OnToIdChanging(value);
                    ReportPropertyChanging("ToId");
                    _ToId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToId");
                    OnToIdChanged();
                }
            }
        }
        private global::System.Guid _ToId;
        partial void OnToIdChanging(global::System.Guid value);
        partial void OnToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdPath
        {
            get
            {
                return _IdPath;
            }
            set
            {
                OnIdPathChanging(value);
                ReportPropertyChanging("IdPath");
                _IdPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdPath");
                OnIdPathChanged();
            }
        }
        private global::System.String _IdPath;
        partial void OnIdPathChanging(global::System.String value);
        partial void OnIdPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneCode
        {
            get
            {
                return _PhoneCode;
            }
            set
            {
                OnPhoneCodeChanging(value);
                ReportPropertyChanging("PhoneCode");
                _PhoneCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneCode");
                OnPhoneCodeChanged();
            }
        }
        private global::System.String _PhoneCode;
        partial void OnPhoneCodeChanging(global::System.String value);
        partial void OnPhoneCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="PhoneType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static PhoneType CreatePhoneType(global::System.Guid id, global::System.String type, global::System.String category, global::System.Int32 sequence)
        {
            PhoneType phoneType = new PhoneType();
            phoneType.Id = id;
            phoneType.Type = type;
            phoneType.Category = category;
            phoneType.Sequence = sequence;
            return phoneType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_EmployeePlace_PhoneType", "EmployeePlace")]
        public EntityCollection<EmployeePlace> EmployeePlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "EmployeePlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePlace>("KSS.Server.Entities.FK_EmployeePlace_PhoneType", "EmployeePlace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_PhoneType", "SpecificStaffPlace")]
        public EntityCollection<SpecificStaffPlace> SpecificStaffPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "SpecificStaffPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "SpecificStaffPlace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="PhoneZoneInt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneZoneInt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneZoneInt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="zone">Initial value of the Zone property.</param>
        public static PhoneZoneInt CreatePhoneZoneInt(global::System.Guid id, global::System.String zone)
        {
            PhoneZoneInt phoneZoneInt = new PhoneZoneInt();
            phoneZoneInt.Id = id;
            phoneZoneInt.Zone = zone;
            return phoneZoneInt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zone
        {
            get
            {
                return _Zone;
            }
            set
            {
                OnZoneChanging(value);
                ReportPropertyChanging("Zone");
                _Zone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zone");
                OnZoneChanged();
            }
        }
        private global::System.String _Zone;
        partial void OnZoneChanging(global::System.String value);
        partial void OnZoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_PhoneZoneInt", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("KSS.Server.Entities.FK_Location_PhoneZoneInt", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneMatrixInt")]
        public EntityCollection<PhoneMatrixInt> PhoneMatrixInts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhoneMatrixInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneMatrixInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhoneMatrixInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_FromId", "PhoneMatrixInt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneMatrixInt")]
        public EntityCollection<PhoneMatrixInt> PhoneMatrixInts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhoneMatrixInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneMatrixInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhoneMatrixInt>("KSS.Server.Entities.FK_PhoneMatrixInt_PhoneZoneInt_ToId", "PhoneMatrixInt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="titleCode">Initial value of the TitleCode property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="departmentCode">Initial value of the DepartmentCode property.</param>
        /// <param name="ranking">Initial value of the Ranking property.</param>
        /// <param name="manualInput">Initial value of the ManualInput property.</param>
        public static Position CreatePosition(global::System.Guid id, global::System.Guid titleId, global::System.String titleCode, global::System.Guid departmentId, global::System.String departmentCode, global::System.String ranking, global::System.Boolean manualInput)
        {
            Position position = new Position();
            position.Id = id;
            position.TitleId = titleId;
            position.TitleCode = titleCode;
            position.DepartmentId = departmentId;
            position.DepartmentCode = departmentCode;
            position.Ranking = ranking;
            position.ManualInput = manualInput;
            return position;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Guid _TitleId;
        partial void OnTitleIdChanging(global::System.Guid value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitleCode
        {
            get
            {
                return _TitleCode;
            }
            set
            {
                OnTitleCodeChanging(value);
                ReportPropertyChanging("TitleCode");
                _TitleCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TitleCode");
                OnTitleCodeChanged();
            }
        }
        private global::System.String _TitleCode;
        partial void OnTitleCodeChanging(global::System.String value);
        partial void OnTitleCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Guid _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Guid value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private global::System.String _DepartmentCode;
        partial void OnDepartmentCodeChanging(global::System.String value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private global::System.String _Ranking;
        partial void OnRankingChanging(global::System.String value);
        partial void OnRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ManualInput
        {
            get
            {
                return _ManualInput;
            }
            set
            {
                OnManualInputChanging(value);
                ReportPropertyChanging("ManualInput");
                _ManualInput = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManualInput");
                OnManualInputChanged();
            }
        }
        private global::System.Boolean _ManualInput;
        partial void OnManualInputChanging(global::System.Boolean value);
        partial void OnManualInputChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Position_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Position_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Position_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Position_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KSS.Server.Entities.FK_Position_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PositionState_Position", "PositionState")]
        public EntityCollection<PositionState> PositionStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PositionState>("KSS.Server.Entities.FK_PositionState_Position", "PositionState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PositionState>("KSS.Server.Entities.FK_PositionState_Position", "PositionState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Position", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Position", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("KSS.Server.Entities.FK_Staff_Position", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="PositionState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PositionState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PositionState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static PositionState CreatePositionState(global::System.Guid id, global::System.String title, global::System.DateTime validationDate)
        {
            PositionState positionState = new PositionState();
            positionState.Id = id;
            positionState.Title = title;
            positionState.ValidationDate = validationDate;
            return positionState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                if (_ValidationDate != value)
                {
                    OnValidationDateChanging(value);
                    ReportPropertyChanging("ValidationDate");
                    _ValidationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationDate");
                    OnValidationDateChanged();
                }
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_PositionState_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_PositionState_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_PositionState_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_PositionState_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("KSS.Server.Entities.FK_PositionState_Position", "Position", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="SpecificStaff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecificStaff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecificStaff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="ranking">Initial value of the Ranking property.</param>
        public static SpecificStaff CreateSpecificStaff(global::System.Guid id, global::System.Guid departmentId, global::System.String position, global::System.String ranking)
        {
            SpecificStaff specificStaff = new SpecificStaff();
            specificStaff.Id = id;
            specificStaff.DepartmentId = departmentId;
            specificStaff.Position = position;
            specificStaff.Ranking = ranking;
            return specificStaff;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Guid _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Guid value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private global::System.String _Ranking;
        partial void OnRankingChanging(global::System.String value);
        partial void OnRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DepartmentSpecificId
        {
            get
            {
                return _DepartmentSpecificId;
            }
            set
            {
                OnDepartmentSpecificIdChanging(value);
                ReportPropertyChanging("DepartmentSpecificId");
                _DepartmentSpecificId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentSpecificId");
                OnDepartmentSpecificIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DepartmentSpecificId;
        partial void OnDepartmentSpecificIdChanging(Nullable<global::System.Guid> value);
        partial void OnDepartmentSpecificIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_SpecificStaff_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_SpecificStaff_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_SpecificStaff_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KSS.Server.Entities.FK_SpecificStaff_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState")]
        public DepartmentSpecificState DepartmentSpecificState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartmentSpecificState> DepartmentSpecificStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartmentSpecificState>("KSS.Server.Entities.FK_SpecificStaff_DepartmentSpecificState", "DepartmentSpecificState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaff_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_SpecificStaff_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_SpecificStaff_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_SpecificStaff_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_SpecificStaff_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_SpecificStaff", "SpecificStaffPlace")]
        public EntityCollection<SpecificStaffPlace> SpecificStaffPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaffPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificStaffPlace>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaffPlace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="SpecificStaffPlace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecificStaffPlace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecificStaffPlace object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="specificStaffId">Initial value of the SpecificStaffId property.</param>
        /// <param name="phoneTypeId">Initial value of the PhoneTypeId property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static SpecificStaffPlace CreateSpecificStaffPlace(global::System.Guid id, global::System.Guid specificStaffId, global::System.Guid phoneTypeId, global::System.String phoneNumber)
        {
            SpecificStaffPlace specificStaffPlace = new SpecificStaffPlace();
            specificStaffPlace.Id = id;
            specificStaffPlace.SpecificStaffId = specificStaffId;
            specificStaffPlace.PhoneTypeId = phoneTypeId;
            specificStaffPlace.PhoneNumber = phoneNumber;
            return specificStaffPlace;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecificStaffId
        {
            get
            {
                return _SpecificStaffId;
            }
            set
            {
                OnSpecificStaffIdChanging(value);
                ReportPropertyChanging("SpecificStaffId");
                _SpecificStaffId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecificStaffId");
                OnSpecificStaffIdChanged();
            }
        }
        private global::System.Guid _SpecificStaffId;
        partial void OnSpecificStaffIdChanging(global::System.Guid value);
        partial void OnSpecificStaffIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LocationId;
        partial void OnLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhoneTypeId
        {
            get
            {
                return _PhoneTypeId;
            }
            set
            {
                OnPhoneTypeIdChanging(value);
                ReportPropertyChanging("PhoneTypeId");
                _PhoneTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneTypeId");
                OnPhoneTypeIdChanged();
            }
        }
        private global::System.Guid _PhoneTypeId;
        partial void OnPhoneTypeIdChanging(global::System.Guid value);
        partial void OnPhoneTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office
        {
            get
            {
                return _Office;
            }
            set
            {
                OnOfficeChanging(value);
                ReportPropertyChanging("Office");
                _Office = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office");
                OnOfficeChanged();
            }
        }
        private global::System.String _Office;
        partial void OnOfficeChanging(global::System.String value);
        partial void OnOfficeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("KSS.Server.Entities.FK_SpecificStaffPlace_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_PhoneType", "PhoneType")]
        public PhoneType PhoneType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "PhoneType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "PhoneType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneType> PhoneTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneType>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "PhoneType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneType>("KSS.Server.Entities.FK_SpecificStaffPlace_PhoneType", "PhoneType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff")]
        public SpecificStaff SpecificStaff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpecificStaff> SpecificStaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpecificStaff>("KSS.Server.Entities.FK_SpecificStaffPlace_SpecificStaff", "SpecificStaff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static Staff CreateStaff(global::System.Guid id, global::System.Guid departmentId, global::System.DateTime validationDate)
        {
            Staff staff = new Staff();
            staff.Id = id;
            staff.DepartmentId = departmentId;
            staff.ValidationDate = validationDate;
            return staff;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Guid _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Guid value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PositionId
        {
            get
            {
                return _PositionId;
            }
            set
            {
                OnPositionIdChanging(value);
                ReportPropertyChanging("PositionId");
                _PositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionId");
                OnPositionIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PositionId;
        partial void OnPositionIdChanging(Nullable<global::System.Guid> value);
        partial void OnPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HolidayStartDate
        {
            get
            {
                return _HolidayStartDate;
            }
            set
            {
                OnHolidayStartDateChanging(value);
                ReportPropertyChanging("HolidayStartDate");
                _HolidayStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HolidayStartDate");
                OnHolidayStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HolidayStartDate;
        partial void OnHolidayStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHolidayStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HolidayEndDate
        {
            get
            {
                return _HolidayEndDate;
            }
            set
            {
                OnHolidayEndDateChanging(value);
                ReportPropertyChanging("HolidayEndDate");
                _HolidayEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HolidayEndDate");
                OnHolidayEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HolidayEndDate;
        partial void OnHolidayEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHolidayEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                if (_ValidationDate != value)
                {
                    OnValidationDateChanging(value);
                    ReportPropertyChanging("ValidationDate");
                    _ValidationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationDate");
                    OnValidationDateChanged();
                }
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Staff_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Staff_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KSS.Server.Entities.FK_Staff_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KSS.Server.Entities.FK_Staff_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Staff_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Staff_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("KSS.Server.Entities.FK_Staff_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("KSS.Server.Entities.FK_Staff_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Staff_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_Staff_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_Staff_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("KSS.Server.Entities.FK_Staff_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("KSS.Server.Entities.FK_Staff_Position", "Position", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="Territory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Territory CreateTerritory(global::System.Guid id)
        {
            Territory territory = new Territory();
            territory.Id = id;
            return territory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_Location_Territory", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Territory", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("KSS.Server.Entities.FK_Location_Territory", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_TerritoryState_Territory", "TerritoryState")]
        public EntityCollection<TerritoryState> TerritoryStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TerritoryState>("KSS.Server.Entities.FK_TerritoryState_Territory", "TerritoryState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TerritoryState>("KSS.Server.Entities.FK_TerritoryState_Territory", "TerritoryState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KSS.Server.Entities", Name="TerritoryState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TerritoryState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerritoryState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="validationDate">Initial value of the ValidationDate property.</param>
        public static TerritoryState CreateTerritoryState(global::System.Guid id, global::System.DateTime validationDate)
        {
            TerritoryState territoryState = new TerritoryState();
            territoryState.Id = id;
            territoryState.ValidationDate = validationDate;
            return territoryState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Guid> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Guid> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidationDate
        {
            get
            {
                return _ValidationDate;
            }
            set
            {
                if (_ValidationDate != value)
                {
                    OnValidationDateChanging(value);
                    ReportPropertyChanging("ValidationDate");
                    _ValidationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidationDate");
                    OnValidationDateChanged();
                }
            }
        }
        private global::System.DateTime _ValidationDate;
        partial void OnValidationDateChanging(global::System.DateTime value);
        partial void OnValidationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_TerritoryState_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_TerritoryState_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_TerritoryState_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("KSS.Server.Entities.FK_TerritoryState_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("KSS.Server.Entities.FK_TerritoryState_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KSS.Server.Entities", "FK_TerritoryState_Territory", "Territory")]
        public Territory Territory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_TerritoryState_Territory", "Territory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_TerritoryState_Territory", "Territory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Territory> Territory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("KSS.Server.Entities.FK_TerritoryState_Territory", "Territory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Territory>("KSS.Server.Entities.FK_TerritoryState_Territory", "Territory", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
